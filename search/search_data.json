{
  

    "articles-webiste-chuyen-tieng-viet-sang-kieu-viet-moi": {
      "title": "Website chuyển tiếng Việt sang kiểu viết mới dựa theo PGS TS Bùi Hiền",
      "content"	 : "Gần đây PGS.TS Bùi Hiền, Nguyên Hiệu phó trường ĐHSP Ngoại ngữ Hà Nội đã đề xuất cải tiến bảng chữ cái tiếng Việt như chuyển cách viết Luật giáo dục” đổi thành “Luật záo zụk”. “Tiếng Việt” thành “Tiếq Việt”, “ngôn ngữ” thành “Qôn qữ”… . Phương pháp này hiện còn đang gây nhiều tranh cãi.Link: http://dantri.com.vn/giao-duc-khuyen-hoc/xon-xao-de-xuat-cai-tien-bang-chu-cai-tieng-viet-thanh-tieq-viet-20171125070902324.htmTuy vậy không thể phủ nhận một số ưu điểm của cách viết mới. Việt Anh tạo trang này để cung cấp một công cụ chuyển đổi từ cách viết cũ sang cách viết mới (theo các thông tin thu thập được từ Internet) cho các bạn tò mò, muốn tìm hiểu.Các bạn có thể truy cập công cụ tại địa chỉ:https://vietanhdev.com/tieng-viet-moi/",
      "url": " https://vietanhdev.com/articles/webiste-chuyen-tieng-viet-sang-kieu-viet-moi/",
      "categories": "article"
    }
    ,
  

    "articles-tu-viet-mot-file-cau-hinh-emacs": {
      "title": "Xây dựng một cấu hình Emacs từ đầu",
      "content"	 : "Emacs là một trình soạn thảo văn bản đa chức năng và có thể mở rộng các chức năng một cách mạnh mẽ. Khi chưa cấu hình (tất cả thiết lập để ở mặc định), Emacs có thể coi là trình soạn thảo hơi khó dùng, giao diện khá đơn giản, nếu không nói là xấu. Tuy nhiên khi tuỳ biến bằng các tệp cấu hình, bạn có thể biến Emacs thành bất cứ thứ gì bạn muốn. Đó là lý do Emacs có thể tồn tại được từ lần đầu tiên nó được sinh ra (năm 1976) cho tới nay và luôn là một trong các trình soạn thảo code được nhiều lập trình viên sử dụng nhất. Trong bài viết này tôi sẽ hướng dẫn các bạn cấu hình cơ bản Emacs từ đầu cho tới khi trở thành một trình soạn thảo đem lại cho bạn cảm giác thoải mái.Một số hình ảnh về Emacs sử dụng các cấu hình khác nhau:GNU Emacs cấu hình mặc định - Hình ảnh từ trang chủ.Spacemacs - Một cấu hình Emacs được phát triển bởi cộng đồngBản Emacs với cấu hình tôi đang dùng để viết bài viết này và sẽ hướng dẫn các bạn tạo một cái tương tự.     Các mục chính của bài viết   Tệp cấu hình Emacs ở đâu?  Tạo file cấu hình từ đầu  Nạp package manager  Tuỳ biến các giao diện chính:          Đổi theme      Ẩn các thanh công cụ, menu, thanh cuộn mặc định      Hiện line number (số dòng khi soạn code)      Cài đặt tab-indent      Word wrap      Tô sáng các ngoặc tương ứng nhau      Đổi Font chữ      Cá nhân hoá “Lời chào” khi khởi động Emacs        Một số tuỳ biến giao diện nâng cao          Cuộn trang mượt hơn, chế độ xem thẩm mĩ và minimap giống Sublime Text      Thêm chức năng Directory view (Hiện cây thư mục các file trong dự án ở bên trái)                  Cài all-the-icons          Cài neotree                    Thêm NyanCat (hình con mèo bay) ở dưới thanh Modeline để biểu thị vị trí chuột so với văn bản        Tăng cường chức năng tìm kiếm và tự động hoàn thành          Thay thế chức năng tìm kiếm, tự hoàn thành mặc định bằng Ivy      Tự hoàn thành code và chức năng Snippet                  Autocomplete : company          Thêm các snippets từ gói yasnippet cho nhiều ngôn ngữ                      Tự động check lỗi lập trình theo thời gian thực  Thêm một số phím tắt chức năng cho Emacs          Comment/Uncomment các dòng code      Quản lí các buffer      Di chuyển giữa các cửa sổ (buffer đang hiện trên màn hình)      Thay đổi thích thước các cửa sổ        Multiple cursors (đa con trỏ)  Tệp cấu hình Emacs ở đâu?Bạn có thể chỉnh sửa cấu hình Emacs tại file ~/.emacs.el hoặc ~/.emacs.d/init.el.Trong khuôn khổ bài viết này, tôi chỉ hướng dẫn các bạn cấu hình từ đầu bằng cách dùng file ~/.emacs.d/init.el. Bạn có thể sử dụng bất kì editor nào bạn muốn để thực hiện việc chỉnh sửa file này (có thể là chính Emacs, tuy nhiên bạn sẽ phải mở lại file cấu hình liên tục mỗi khi khởi động lại Emacs để xem kết quả nếu bạn dùng nó).Tạo file cấu hình từ đầuHãy tạo 1 file cấu hình để chúng ta bắt đầu làm việc từ đầu bằng cách xoá file ~/.emacs.el và tất cả các file trong thư mục ~/.emacs.d, sau đó tạo file mới ~/.emacs.d/init.el.Sau khi có một file cấu hình mới tên init.el, bạn hãy thực hiện tiếp các bước bên dưới để thêm nội dung vào.Nạp package managerPackage manager (giống Package control bên Sublime Text) giúp bạn quản lí, cài đặt các gói tính năng bổ sung cho trình soạn thảo.Thêm đoạn code sau để load package manager lên và thêm kho plugin “melpa”:;; Load package manager(require &#39;package)(add-to-list &#39;package-archives &#39;(&quot;melpa&quot; . &quot;https://melpa.org/packages/&quot;))(package-initialize)Trong bài viết này tôi sẽ sử dụng thêm một gói tên use-package để tự động quản lí việc tải về các package khác và tăng đáng kể tốc độ khởi động Emacs.Đặt đoạn code sau ngay phía dưới đoạn trên:;; Load `use-package`(unless (package-installed-p &#39;use-package)  (package-refresh-contents)  (package-install &#39;use-package))(eval-when-compile  (require &#39;use-package))(require &#39;diminish)(require &#39;bind-key)(setq use-package-always-ensure t)Tuỳ biến các giao diện chính:Đổi themeTrong cấu hình này tôi sẽ sử dụng theme monokai (theme màu tối được khá nhiều người ưa thích). Bạn cũng có thể tìm các theme khác từ Google nhé.;; Load editor theme(use-package monokai-theme  :config (load-theme &#39;monokai t))Ẩn các thanh công cụ, menu, thanh cuộn mặc địnhĐôi khi việc có thêm các thanh menu, thanh cuộn chỉ làm bạn mất tập trung. Hãy loại bỏ chúng bằng cách thêm đoạn code sau (Lưu ý nếu bạn muốn giữ lại thứ gì hãy comment lại dòng tương ứng bằng cách để dấu ; ở đầu dòng).;; Turn off menubar, toolbar, scollbar(if (fboundp &#39;menu-bar-mode) (menu-bar-mode -1))(if (fboundp &#39;tool-bar-mode) (tool-bar-mode -1))(if (fboundp &#39;scroll-bar-mode) (scroll-bar-mode -1))Hiện line number (số dòng khi soạn code);; Display line number when programming(add-hook &#39;prog-mode-hook &#39;linum-mode)(setq linum-format &quot;%4d u2502&quot;)Cài đặt tab-indent(setq tab-width 4)Word wrapMặc định Emacs sẽ cắt dòng bằng cách cắt đôi một từ. Dòng sau sẽ giúp cài đặt Emacs chỉ xuống dòng khi viết hết từ.(global-visual-line-mode t)Tô sáng các ngoặc tương ứng nhauSử dụng code sau giúp tô sáng ngoặc tương ứng khi bạn để con trỏ lên một ngoặc.;; Display paren (highlight matching brackets)(show-paren-mode 1)(setq show-paren-delay 0)Đổi Font chữTôi rất thích sử dụng font “Source Code Pro” của Adobe khi code. Do vậy tôi sẽ đổi font mặc định của Emacs:      Cài Font “Source Code Pro” của Adobe bằng cách tải về từ github https://github.com/adobe-fonts/source-code-pro và thực hiện cài đặt theo hệ điều hành sử dụng.        Sau khi cài font “Source Code Pro”, thêm đoạn sau vào file cấu hình Emacs:  (set-face-attribute &#39;default nil                    :family &quot;Source Code Pro&quot;                    :height 160                    :weight &#39;normal                    :width &#39;normal)Cá nhân hoá “Lời chào” khi khởi động EmacsCó một cấu hình khác hay trong Emacs giúp bạn tạo ra một màn hình “Lời chào” mỗi khi bật Emacs thay vì màn hình trợ giúp mặc định của nó. Thêm code sau vào file cấu hình (sửa lời chào của tôi thành cái của bạn nhé - có thể dùng markdown để lời chào thêm sinh động).;; Display startup message(setq initial-scratch-message &quot;# EMACS CONFIGURATION BY VIET-ANH NGUYEN# VERSION : 1.0## Email: ...## Website: ...## Welcome! Hope my configuration can help you.&quot;)(setq inhibit-startup-message t)(setq initial-major-mode &#39;markdown-mode)  Well done!  Kết thúc phần cấu hình giao diện cơ bản. Bạn có thể khởi động lại Emacs để xem những thay đổi vừa xảy ra rồi đó. Nếu có bất kì thắc mắc hoặc vấn đề nào trong quá trình thực hiện, hãy comment bên dưới bài viết.Một số tuỳ biến giao diện nâng caoCuộn trang mượt hơn, chế độ xem thẩm mĩ và minimap giống Sublime TextNếu bạn lựa chọn trình soạn thảo Sublime Text vì những thứ trên và ghét Emacs ở chỗ mỗi khi bạn cuộn trang (C-v, M-v) thì Emacs sẽ ngay lập tức chuyển sang vị trí tiếp theo, không có hiệu ứng cuộn, hay bạn thích 1 trình soạn thảo có thêm chức năng minimap(“bản đồ” thu nhỏ của code), xem văn bản kiểu attractive (căn lề 2 bên để tăng tính thẩm mĩ), xin trả lời Emacs cũng làm được như vậy với package sublimity. Chỉ cần thêm đoạn code sau:;; Smooth Scrolling and attractive mode (look like Sublime Text)(use-package sublimity  :config  (require &#39;sublimity-scroll)  ;; (require &#39;sublimity-map) ;; experimental  (require &#39;sublimity-attractive)  (sublimity-mode 1)  )Cá nhân tôi không thích chế độ xem minimap nên tôi sẽ comment dòng ;; (require &#39;sublimity-map) ;; experimental. Chỉ cần bỏ ;; đầu dòng đó là chức năng trên sẽ được kích hoạt.Screenshot (Nguồn sublimity):Thêm chức năng Directory view (Hiện cây thư mục các file trong dự án ở bên trái)Ở đây mình sẽ sử dụng đến package tên “neotree” cho chức năng hiện cây thư mục và “all-the-icons” cho hiển thị các icon đẹp cho thư mục và tệp.Cài all-the-iconsThêm dòng:(use-package all-the-icons)Tiếp theo, khởi động lại Emacs và gõ M-x all-the-icons-install-fonts để cài các icon font vào hệ thống.Cài neotree;; Display a directory tree view on the left side(use-package neotree :config (progn  (setq neo-theme (if (display-graphic-p) &#39;icons &#39;arrow))) :bind (&quot;C-x n o&quot; . neotree-toggle))Sau khi khởi động lại một lần nữa và chờ tới khi neotree được cài đặt, bạn có thể gõ C-x n o để bật/tắt chế độ xem cây thư mục.ScreenshotThêm NyanCat (hình con mèo bay) ở dưới thanh Modeline để biểu thị vị trí chuột so với văn bản;; NyanCat on Modeline as an analog indicator of your position in the buffer(use-package nyan-mode  :config  (nyan-mode)  )Bạn có thể ghé qua https://github.com/TeMPOraL/nyan-mode để tìm hiểu thêm một số thiết lập animation (hoạt hình) cho NyanCat.Hình ảnh thanh NyanCat:Tăng cường chức năng tìm kiếm và tự động hoàn thànhThay thế chức năng tìm kiếm, tự hoàn thành mặc định bằng IvyCác chức năng tìm kiếm, tự hoàn thành mặc định có thể thay thế bằng một framework tuyệt vời tên Ivy. Bạn cũng có thể dùng Helm - framework khá mạnh mẽ được nhiều người dùng. Tuy nhiên vì Helm có quá nhiều chức năng, nó sẽ khiến Emacs chậm đi đáng kể tôi quyết định chọn Ivy.Thêm đoạn code sau vào file cấu hình và khởi động lại. Thử một chức năng như tìm kiếm C-s hay M-x để xem sự khác biệt so với các mặc định của Emacs.;; Replace default completion frontend with Ivy;; https://github.com/abo-abo/swiper(use-package counsel  :config (ivy-mode 1)  :init  (progn    (setq ivy-use-virtual-buffers t)    (setq enable-recursive-minibuffers t)    (global-set-key &quot;C-s&quot; &#39;swiper)    (global-set-key (kbd &quot;C-c C-r&quot;) &#39;ivy-resume)    (global-set-key (kbd &quot;&amp;lt;f6&amp;gt;&quot;) &#39;ivy-resume)    (global-set-key (kbd &quot;M-x&quot;) &#39;counsel-M-x)    (global-set-key (kbd &quot;C-x C-f&quot;) &#39;counsel-find-file)    (global-set-key (kbd &quot;&amp;lt;f1&amp;gt; f&quot;) &#39;counsel-describe-function)    (global-set-key (kbd &quot;&amp;lt;f1&amp;gt; v&quot;) &#39;counsel-describe-variable)    (global-set-key (kbd &quot;&amp;lt;f1&amp;gt; l&quot;) &#39;counsel-find-library)    (global-set-key (kbd &quot;&amp;lt;f2&amp;gt; i&quot;) &#39;counsel-info-lookup-symbol)    (global-set-key (kbd &quot;&amp;lt;f2&amp;gt; u&quot;) &#39;counsel-unicode-char)    (global-set-key (kbd &quot;C-c g&quot;) &#39;counsel-git)    (global-set-key (kbd &quot;C-c j&quot;) &#39;counsel-git-grep)    (global-set-key (kbd &quot;C-c k&quot;) &#39;counsel-ag)    (global-set-key (kbd &quot;C-x l&quot;) &#39;counsel-locate)    (global-set-key (kbd &quot;C-S-o&quot;) &#39;counsel-rhythmbox)    (define-key read-expression-map (kbd &quot;C-r&quot;) &#39;counsel-expression-history))  )Tự hoàn thành code và chức năng SnippetAutocomplete : company;; Autocomplete(use-package company  :config (global-company-mode t))Thêm các snippets từ gói yasnippet cho nhiều ngôn ngữ;; Snippets(use-package yasnippet  :defer t  :init  (yas-global-mode 1))Tự động check lỗi lập trình theo thời gian thựcỞ đây tôi dùng Flycheck thay cho Flymake mặc định trên Emacs.;;;; FLYCHECK  - REALTIME ERROR CHECKING ===============(use-package flycheck  :config  (global-flycheck-mode)  (setq flycheck-check-syntax-automatically &#39;(mode-enabled save))  )Thêm một số phím tắt chức năng cho EmacsComment/Uncomment các dòng codeThêm đoạn code sau và bạn có chức năng comment tương tự các editor khác như Sublime Text (sử dụng C-c c để toggle comment cho các dòng code được bôi đen).(defun xah-comment-dwim ()  &quot;Like `comment-dwim&#39;, but toggle comment if cursor is not at end of line.&quot;  (interactive)  (if (region-active-p)      (comment-dwim nil)    (let ((-lbp (line-beginning-position))          (-lep (line-end-position)))      (if (eq -lbp -lep)          (progn            (comment-dwim nil))        (if (eq (point) -lep)            (progn              (comment-dwim nil))          (progn            (comment-or-uncomment-region -lbp -lep)            (forward-line )))))))(global-set-key (kbd &quot;C-c c&quot;) &#39;xah-comment-dwim)Quản lí các buffer;; Manage buffers(defun switch-to-previous-buffer ()  &quot;Switch to previously open buffer.Repeated invocations toggle between the two most recently open buffers.&quot;  (interactive)  (switch-to-buffer (other-buffer (current-buffer) 1)))(use-package key-chord  :config  (progn  (key-chord-mode 1)  (key-chord-define-global &quot;jj&quot; &#39;switch-to-previous-buffer)  (key-chord-define-global &quot;kk&quot; &#39;next-buffer))  (key-chord-define-global &quot;gg&quot; &#39;goto-line)  (key-chord-define-global &quot;yy&quot; &#39;other-window)  (key-chord-define-global &quot;xx&quot; &#39;kill-buffer))Ở đây tôi dùng các keychord để quản lí các buffer. Keychord được kích hoạt bằng cách ấn liên tục chuỗi phím trên bàn phím. Ví dụ bạn có thể ấn liên tiếp jj để chuyển qua buffer trước đó. Các keychord dùng quản lí buffer và chức năng của chúng được mô tả trong bảng dưới đây.KeychordFunctionjjChuyển qua buffer trước đókkChuyển qua buffer sauggĐi tới một dòng (Nhập vào số dòng)yyNhảy giữa các buffer trên màn hìnhxxĐóng buffer (kill)Di chuyển giữa các cửa sổ (buffer đang hiện trên màn hình)Việc này sẽ được thực hiện bằng cách ấn C-c và theo sau là một phím mũi tên.;; Move between windows(global-set-key (kbd &quot;C-c &amp;lt;left&amp;gt;&quot;)  &#39;windmove-left)(global-set-key (kbd &quot;C-c &amp;lt;right&amp;gt;&quot;) &#39;windmove-right)(global-set-key (kbd &quot;C-c &amp;lt;up&amp;gt;&quot;)    &#39;windmove-up)(global-set-key (kbd &quot;C-c &amp;lt;down&amp;gt;&quot;)  &#39;windmove-down)Thay đổi thích thước các cửa sổViệc này được thực hiện bằng cách ấn C-s (phím Ctrl và phím cửa sổ, command) cùng lúc với một phím mũi tên.;; Resize windows(global-set-key (kbd &quot;C-s-&amp;lt;left&amp;gt;&quot;) &#39;shrink-window-horizontally)(global-set-key (kbd &quot;C-s-&amp;lt;right&amp;gt;&quot;) &#39;enlarge-window-horizontally)(global-set-key (kbd &quot;C-s-&amp;lt;down&amp;gt;&quot;) &#39;shrink-window)(global-set-key (kbd &quot;C-s-&amp;lt;up&amp;gt;&quot;) &#39;enlarge-window)Multiple cursors (đa con trỏ)Đây là một trong những chức năng khá hay trong các editor hiện đại giúp lập trình viên chỉnh sửa cùng lúc nhiều dòng code. Việc này được cài đặt trên Emacs bằng cách sử dụng package multiple-cursors.;;;; MULTIPLE CURSORS ==================================(use-package multiple-cursors  :bind ((&quot;C-x c&quot; . mc/edit-lines)         (&quot;C-&amp;gt;&quot; . mc/mark-next-like-this)         (&quot;C-&amp;lt;&quot; . mc/mark-previous-like-this)         (&quot;C-c C-&amp;lt;&quot; . mc/mark-all-like-this) (&quot;C-S-&amp;lt;down-mouse-1&amp;gt;&quot; . mc/add-cursor-on-click)       ));;;; ===================================================Xem thêm về cách sử dụng và các cấu hình khác tại multiple-cursors.Một demo về sử dụng package này trên Emacs Rocks:http://emacsrocks.com/e13.html  Kết  Trên đây là hướng dẫn cơ bản giúp bạn có được một bản Emacs hoàn chỉnh nhìn khá ổn về giao diện và các chức năng cơ bản. Hãy nhớ khởi động lại Emacs để các package được tải về và cấu hình đúng. Comment bên dưới nếu bạn có góp ý gì cho bài viết của tôi hoặc gặp vấn đề gì với việc cấu hình Emacs.  Tôi đã xây dựng file cấu hình gồm các thiết lập như ở trên kèm theo nhiều chức năng mới hỗ trợ việc phát triển web, ruby, python... và tối ưu hoá thời gian khởi động. Nếu bạn quan tâm có thể truy cập: https://github.com/vietanhdev/VAEmacs-configuration",
      "url": " https://vietanhdev.com/articles/tu-viet-mot-file-cau-hinh-Emacs/",
      "categories": "article"
    }
    ,
  

    "til-install-mysql2-gem-macos-mamp": {
      "title": "Install mysql2 gem on macOS using MAMP as mySQL server",
      "content"	 : "When installing mysql2 gem on a system using MAMP as mySQL server, you may end up with a compilation error because of incorrect mysql path.To deal with this problem, instead of gem install mysql2, try to specify mysql configuration directory:gem install mysql2 -- --with-mysql-config=/Applications/MAMP/Library/bin/mysql_config",
      "url": " https://vietanhdev.com/til/install-mysql2-gem-macos-mamp/",
      "categories": "til"
    }
    ,
  

    "til-minfy-all-js-files-in-folder-with-uglifyjs": {
      "title": "Minify multiple Javascript files in a folder with UglifyJS",
      "content"	 : "To minify multiple Javascript files, you can use Grunt. However, there is a much easier way to archive it using UglifyJS and Bashscript.Step 1: Install UglifyJSnpm install -g uglify-jsStep 2: Write some Bash script code to find and minify all js files in a folderfor file in path/to/js/folder/*.js; do    uglifyjs &quot;$file&quot; --stats -c -m  -o &quot;$file&quot;     echo minified: &quot;$file&quot; done Step 3: Run scriptSave script in Step 2 to a file called ‘minify-js.sh’ and run it using Terminal:sudo chmod +x minify-js.sh./minify-js.shModify this code a litte and you can use it with cleancss or other minifier.This code help me much in deploying my webiste (a static site built with Jekyll). Hope it help someone else.",
      "url": " https://vietanhdev.com/til/minfy-all-js-files-in-folder-with-uglifyjs/",
      "categories": "til"
    }
    ,
  

    "til-regexp-huu-ich": {
      "title": "Regexp hữu dụng",
      "content"	 : "RegExp (Regular Expression - Biểu thức chính quy) là các đoạn mã biểu diễn một “search pattern” dùng nhiều trong việc tìm kiếm, thay thế, verify dữ liệu trong nhiều ngôn ngữ. Nếu biết tận dụng nó có thể trở thành một công cụ mạnh giúp lập trình viên trong nhiều việc khác nhau.Tôi tạo trang này để sưu tập các quy tắc sử dụng Regexp để sử dụng mỗi lần cần tới.Basic? : 0-1 kí tự.* : 0-nhiều kí tự.+ : một hay nhiều kí tự liên tiếp giống kí tự trước +. “ab+c” match “abc”, “abbc”, “abbbc” nhưng không match với “ac”.{n} : match kí tự đằng trước n lần.{min,} : match kí tự đằng trước ít nhất min lần.{min,max} : match kí tự đằng trước từ min đến max lần.gray|grey : “gray” or “grey”.() : Để nhóm các biểu thứcMetacharacter Description^: Bắt đầu với.: 1 kí tự[ ] : match 1 kí tự giống 1 trong các kí tự trong ngoặc. “[ab]”, “[a-z]”[^ ] : match 1 kí tự KHÔNG các kí tự trong ngoặc. “[^ab]”, “[^a-z]”$ : kí tự cuốiSpecific characterss: spaceS: non-spaceb: match 1 phân cách giữa kí tự word-class (A-Z, a-z, 0-9, _) và kí tự không phải word-class. Giống với (^w|w$|Ww|wW).$string1 = &quot;Hello Worldn&quot;;if ($string1 =~ m/llob/) {  print &quot;There is a word that ends with &#39;llo&#39;.n&quot;;}w:  (A-Z, a-z, 0-9, _)W: Ngược lại với wd: Số D: Không phải số A: Bắt đầu xâu.$string1 = &quot;HellonWorldn&quot;;if ($string1 =~ m/AH/) {  print &quot;$string1 is a string &quot;;  print &quot;that starts with &#39;H&#39;.n&quot;;}Output:HelloWorld is a string that starts with &#39;H&#39;z: Kết thúc xâu$string1 = &quot;HellonWorldn&quot;;if ($string1 =~ m/dnz/) {  print &quot;$string1 is a string &quot;;  print &quot;that ends with &#39;dn&#39;.n&quot;;}Output:HelloWorld is a string that ends with &#39;dn&#39;.Popular RegExpMã màu hex : #([a-fA-F]|[0-9]){3, 6}Email: /[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}/igmTên miền từ URL: /https?://(?:[-w]+.)?([-w]+).w+(?:.w+)?/?.*/iLấy link ảnh từ thẻ img: &amp;lt; *[img][^&amp;gt;]*[src] *= *[&quot;&#39;]{0,1}([^&quot;&#39; &amp;gt;]*)Kiểm tra đuôi file: /^(.*.(?!(htm|html|class|js)$))?[^.]*$/iĐể xoá nguyên 1 dòng bắt đầu với “start”, tìm: /^start.*n/Useful Links:  Tạo, xem, kiểm tra Regexp: http://regexr.com/",
      "url": " https://vietanhdev.com/til/regexp-huu-ich/",
      "categories": "til"
    }
    ,
  

    "articles-nhap-xau-ki-tu-trong-c-linux-mac-windows": {
      "title": "Một cách nhập xâu kí tự trong C - giải quyết vấn đề của fflush cho Linux, Mac OS",
      "content"	 : "Khi lập trình C trên Windows, bạn có thể sử dụng fflush() để làm sạch bộ đệm trước khi nhập một xâu, tránh tình trạng “lạc trôi” của lệnh nhập xâu. Tuy nhiên khi làm việc với các hệ thống khác như Linux, hay Mac OS, mọi chuyện không đơn giản nữa: nhiều khi fflush() sẽ không làm việc. Bài viết này sẽ cho bạn một cách giải quyết đơn giản có thể chạy được trên cả Linux, Mac OS và cả Windows.Vấn đề gì khi không sử dụng fflush() và cả khi sử dụng nó?Không sử dụng fflush() (và các phương pháp thay thế):Hãy xem xét đoạn chương trình sau:#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt;int main(int argc, char const *argv[]){    int c;    char s[100];    printf(&quot;c = &quot;); scanf(&quot;%d&quot;, &amp;amp;c);    printf(&quot;s = &quot;);    fgets(s, 100, stdin);    if (strlen(s) &amp;gt; 0) // xoá kí tự &#39;n&#39; ở cuối khi nhập bằng fgets        if (s[strlen(s) - 1] == &#39;n&#39;)            s[strlen(s) - 1] = 0;    printf(&quot;c = %dn&quot;, c);    printf(&quot;s = %sn&quot;, s);        return 0;}Khi chạy chương trình ta thu được kết quả sau:Rõ ràng xâu s đã không được nhập vào. Vấn đề này xảy ra do khi nhập c bằng scanf() thì kí tự n vẫn còn lưu trong bộ đệm bàn phím. Khi lệnh nhập s (fgets) chạy, nó gặp kí tự n trong bộ đệm do vậy trả luôn về một xâu chỉ chứa n.Vậy khi sử dụng fflush() để làm sạch bộ đệm thì có vấn đề gì?Bạn có thể giải quyết vấn đề trôi lệnh trên Windows bằng cách thêm một lệnh fflush() vào trước fgets(). Tuy vậy khi chuyển chương trình sang Linux hoặc Mac OS thì nhiều khi lệnh này sẽ không còn hoạt động.Phương pháp nhập xâu trong C:Google một thời gian tôi cũng tìm được câu trả lời cho phương pháp nhập xâu trong các hệ thống ngoài Windows. Đơn giản là bạn thêm đoạn lệnh sau khi trong bộ đệm vẫn còn kí tự n.int ch;do { ch = getchar(); } while (ch != &#39;n&#39; &amp;amp;&amp;amp; ch != EOF);Sử dụng trong chương trình bên trên thì có vẻ khá ổn. Tuy nhiên nếu trước đó không có số nguyên c được nhập thì sao? Có vẻ không ổn rồi! - Chương trình sẽ dừng lại, nhận vào một kí tự rồi mới tiếp tục chạy.Vậy cách giải quyết thế nào? Tôi xin đưa ra cách tôi đã dùng:#include &amp;lt;string.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;void removeLastEnter(char *s) {    if (strlen(s) != 0)        if (s[strlen(s) - 1] == &#39;n&#39;)            s[strlen(s) - 1] = &#39;0&#39;;}char* readLn(FILE * fin, char *s, int max_len) {    char* p;    p = fgets(s, max_len * sizeof(char), fin);    if (p != NULL) { // already read sth        // Re-read line if it contain only enter character        removeLastEnter(s);        if (strlen(s) == 0) {            p = readLn(fin, s, max_len);        }    }    return p;}int main(int argc, char const *argv[]) {    int c;    char s[100];    printf(&quot;c = &quot;); scanf(&quot;%d&quot;, &amp;amp;c);    printf(&quot;s = &quot;); readLn(stdin, s, 100);        printf(&quot;c = %dn&quot;, c);    printf(&quot;s = %sn&quot;, s);        return 0;}Hàm readLn() sẽ giúp nhập vào một xâu (s) từ bàn phím (độ dài lớn nhất là 100). Quá trình nhập xâu không bị ảnh hưởng nếu có sẵn một kí tự n trong bộ đệm bàn phím từ trước và sẽ chỉ dừng lại khi nhận vào một xâu có độ dài &amp;gt; 0.Đây là cách làm tôi sử dụng trong chương trình của mình. Nếu bạn có cách làm khác hoặc góp ý gì với cách làm này, hãy để lại comment bên dưới!",
      "url": " https://vietanhdev.com/articles/nhap-xau-ki-tu-trong-c-linux-mac-windows/",
      "categories": "article"
    }
    ,
  

    "articles-lay-dia-chi-ip-that-client-nodejs-heroku": {
      "title": "Lấy địa chỉ IP thật của client trên Heroku với Nodejs",
      "content"	 : "Khi sử dụng Express js của Nodejs, bạn đơn giản chỉ cần sử dụng req.ip để lấy IP người dùng. Tuy thế, khi bạn ứng dụng của chúng ta được host trên Heroku thì việc lấy IP thế này sẽ cho kết quả sai, đơn giản vì Heroku thực hiện một số routing khiến IP bạn nhận được là IP của router Heroku hoặc proxy. Vậy chúng ta nên làm thế nào?Heroku đã đính kèm header x-forwarded-for vào các request với từ người dùng. Nội dung của nó là một danh sách IP ngăn cách bằng dấu phẩy (,). Tất cả những gì chúng ta cần là split chúng thành một mảng và lấy phần tử cuối cùng (IP thật từ client).Vậy là trong app, ta cần thêm hàm sau để lấy IP thậtvar getIP = function(req) {  ipAddr = req.headers[&quot;x-forwarded-for&quot;];  if (ipAddr){    var list = ipAddr.split(&quot;,&quot;)[list.length-1];    ipAddr = list;  } else {    ipAddr = req.connection.remoteAddress;  }  return ipAddr;}Với đoạn mã này bạn có thể dùng trong các ứng dụng thống kê truy cập website, thu thập thông tin từ contact form (muốn lấy thêm IP người dùng).",
      "url": " https://vietanhdev.com/articles/lay-dia-chi-ip-that-client-nodejs-heroku/",
      "categories": "article"
    }
    ,
  

    "articles-tao-contact-form-don-gian-voi-nodejs-nodemailer": {
      "title": "Tạo contact form đơn giản với Nodejs - nodemailer",
      "content"	 : "Nếu website của bạn sử dụng một CMS như Wordpress thì việc tạo contact form đã khá dễ dàng với các plug-in. Tuy nhiên nếu bạn đang có một website tĩnh, bạn sẽ cần một dịch vụ để xử lí các form liên hệ của bạn. Bài viết này sẽ hướng dẫn bạn tự tạo một backend đơn giản để xử lí các form liên hệ.Form liên hệ của chúng ta sẽ hoạt động theo các nhận request từ  form theo method POST và gửi chúng đến email chính bằng nodemailer của Nodejs.     Contents   Step 1: Cài đặt Nodejs  Step 2: Tạo Project mới (có thể là mail-gate)  Step 3: Viết code Nodejs  Step 4: Deploy lên heroku:  Step 5: Sử dụng backend đã tạo với một contact form:  Step 1: Cài đặt NodejsTrước tiên bạn cần phải cài đặt Nodejs bằng cách truy cập vào trang chủ để tải về và cài đặt: https://nodejs.org/en/.Nếu bạn đang dùng Ubuntu/Debian hay một hệ linux phổ biến khác thì Nodejs cũng có mặt trên kho phần mềm và có thể dễ dàng cài đặt bằng lệnh đơn giản như sudo apt-get install nodejs (Ubuntu Linux).Step 2: Tạo Project mới (có thể là mail-gate)      Tạo một thư mục với tên dự án của bạn.        Dùng lệnh npm init trong thư mục và nhập các thông tin.s  Step 3: Viết code NodejsCopy đoạn code sau vào file index.js. Bạn sửa phần smtpConfig là cấu hình chúng ta dùng để gửi mail. Bạn có thể đăng kí một tài khoản Gmail mới và nhập vào đó.Bạn cũng cần chỉnh sửa phần smtpTransport.sendMail và điền vào đó tên và email của bạn. Ví dụ: Việt Anh &amp;lt;abc@vietanhdev.com&amp;gt;.var nodemailer = require(&quot;nodemailer&quot;);var http = require(&#39;http&#39;);var bodyParser = require(&#39;body-parser&#39;);var express = require(&#39;express&#39;);var app = express();var request = require(&quot;request&quot;);app.use(bodyParser.json());app.use(bodyParser.urlencoded({  extended: true}));var server = http.createServer(app);// Nhận request từ tất cả các nguồnapp.use(function (req, res, next) {    // Website you wish to allow to connect    res.setHeader(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;);    // Pass to next layer of middleware    next();});// Homepageapp.get(&#39;/&#39;, (req, res) =&amp;gt; {  res.send(&quot;Home page. Server running okay.&quot;);});// Đường dẫn xử lí formapp.post(&#39;/contact&#39;, function (req, res) {    var content = &#39;&amp;lt;h1&amp;gt;We have new submission from your website!&amp;lt;/h1&amp;gt;&#39;;  // Lấy tất cả các giá trị tham số từ POST request  for (var x in req.query) {    content += &#39;&amp;lt;b&amp;gt;&#39; + x + &#39;&amp;lt;/b&amp;gt; :  &#39; + req.query[x] + &#39;  &amp;lt;/br&amp;gt;&#39;;  }  for (var x in req.body) {    content += &#39;&amp;lt;b&amp;gt;&#39; + x + &#39;&amp;lt;/b&amp;gt; :  &#39; + req.body[x] + &#39;  &amp;lt;/br&amp;gt;&#39;;  }  // Trả về kết quả dưới dạng JSON  res.json({&quot;success&quot;: &quot;ok&quot;});  // Khai báo cấu hình gửi mail  var smtpConfig = {      host: &#39;smtp.gmail.com&#39;,      port: 587,      secure: false, // upgrade later with STARTTLS      auth: {          user: &#39;&amp;lt;username&amp;gt;@gmail.com&#39;,          pass: &#39;&amp;lt;pass&amp;gt;&#39;      }  };  // Gửi mail  var smtpTransport = nodemailer.createTransport(smtpConfig);  smtpTransport.sendMail({  //email options       from: &quot;MailGate by Viet Anh &amp;lt;xxxxxx@gmail.com&amp;gt;&quot;,       to: &quot;Tên Của Bạn &amp;lt;email của bạn&amp;gt;&quot;, // receiver       subject: &quot;Có tin nhắn mới từ website của bạn!&quot;, // subject       html: content // body        }, function(error, response){  //callback            if(error){               console.log(error);            } else {               console.log(&quot;Đã gửi mail!&quot;);            }        smtpTransport.close();   });});var port = process.env.PORT || 5000;server.listen(port, function() {  console.log(&quot;Server is running! port : &quot; + port);});Step 4: Deploy lên heroku:Bạn có thể deploy đoạn mã này lên bất cứ server hoặc dịch vụ nào bạn có. Ở đây tôi hướng dẫn các bạn deploy lên Heroku vì nó khá đơn giản và miễn phí.  Trước tiên đăng kí tài khoản Heroku.  Tạo 1 app.  Cài Heroku CLI lên máy của bạn: Xem hướng dẫn.  Deploy bằng Heroku CLI:          Đăng nhập: heroku login      Khởi tạo git: Thay &amp;lt;ten-app-cua-ban&amp;gt;  bằng tên app vừa tạo. Ví dụ: mail-gate-by-va.        git initheroku git:remote -a &amp;lt;ten-app-cua-ban&amp;gt;                    Commit và deploy lên heroku:        git add .git commit -am &quot;make it better&quot;git push heroku master                      Check xem app của bạn đã hoạt động ok chưa bằng các vào https://&amp;lt;ten-app-cua-ban&amp;gt;.herokuapp.com/ bằng trình duyệt. Nếu bạn nhìn thấy dòng “Home page. Server running okay.” thì mọi thứ đã hoạt động tốt.Step 5: Sử dụng backend đã tạo với một contact form:Việc gửi dữ liệu có thể được thực hiện với một contact form đơn giản thế này:&amp;lt;h1&amp;gt;Contact form&amp;lt;/h1&amp;gt;&amp;lt;form id=&quot;contact-form&quot; method=&quot;POST&quot; action=&quot;https://&amp;lt;ten-app-cua-ban&amp;gt;.herokuapp.com/contact&quot;&amp;gt;  &amp;lt;input type=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;Email&quot;&amp;gt;  &amp;lt;input type=&quot;text&quot; name=&quot;website&quot; placeholder=&quot;Tên bạn&quot;&amp;gt;  &amp;lt;textarea name=&quot;message&quot; rows=&quot;8&quot; placeholder=&quot;Nội dung tin nhắn&quot;&amp;gt;&amp;lt;/textarea&amp;gt;  &amp;lt;input type=&quot;submit&quot; class=&quot;btn btn-primary&quot; value=&quot;Send / Gửi đi&quot;&amp;gt;&amp;lt;/input&amp;gt;&amp;lt;/form&amp;gt;Hình ảnh email nhận được sau khi nhập form liên hệ:",
      "url": " https://vietanhdev.com/articles/tao-contact-form-don-gian-voi-nodejs-nodemailer/",
      "categories": "article"
    }
    ,
  

    "articles-cai-certbot-raspbian-jessie": {
      "title": "Cài Certbot cho Raspbian Jessie",
      "content"	 : "Certbot là package phía server sử dụng để lấy và deploy chứng chỉ SSL/TSL một cách tự động. Nó giúp setup một kết nối HTTPS cho máy chủ chỉ trong một nốt nhạc và hoàn toàn miễn phí với Let’s Encrypt.Việc cài đặt package Certbot cho Raspbian(hệ điều hành cho máy tính Raspberry Pi) có thể gặp lỗi “Unable to locate package certbot”. Trên Raspbian, cần cài đặt Certbot như một gói backport.     Contents   Step 1: Thêm nguồn backport Debian Jessie:  Step 2: apt-get update  Step 3: Cài Certbot  Step 1: Thêm nguồn backport Debian Jessie:Mở Terminal. Các lệnh chạy bằng quyền root nên ta chạysuTiếp theo thêm nguồn backportecho &quot;deb http://ftp.debian.org/debian jessie-backports main&quot; &amp;gt; /etc/apt/sources.list.d/backports.listStep 2: apt-get updateTôi gặp lỗi như sau khi chạy apt-get update:  W: GPG error: http://ftp.debian.org jessie-backports InRelease: The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY 8B48AD6246925553 NO_PUBKEY 7638D0442B90D010Hai khoá “8B48AD6246925553”, “7638D0442B90D010” hiện ở thông báo lỗi cần được thêm vào gpg keyring.Chạy liên tiếp các lệnh:gpg --keyserver pgpkeys.mit.edu --recv-key 8B48AD6246925553gpg -a --export 8B48AD6246925553 | sudo apt-key add -gpg --keyserver pgpkeys.mit.edu --recv-key 7638D0442B90D010gpg -a --export 7638D0442B90D010 | sudo apt-key add -Sau đó update package list:apt-get updateStep 3: Cài CertbotCài Certbot bằng lệnh:apt-get install certbot -t jessie-backports",
      "url": " https://vietanhdev.com/articles/cai-certbot-Raspbian-Jessie/",
      "categories": "article"
    }
    ,
  

    "articles-xu-li-tieng-viet-javascript": {
      "title": "Một số kĩ thuật xử lí tiếng Việt trong Javascript",
      "content"	 : "Các kĩ thuật xử lí sau sẽ giúp chúng ta thao tác với tiếng Việt dễ dàng hơn mà không cần mất công xây dựng lại.     Contents   Xoá dấu tiếng Việt  Loại bỏ tất cả các kí tự không phải chữ cái và số  Xoá dấu cách thừa  Xoá dấu tiếng ViệtHàm xoa_dau() sau sẽ xoá loại bỏ hoàn toàn dấu câu tiếng Việt, không phân biệt hoa thường.function xoa_dau(str) {str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, &quot;a&quot;);str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, &quot;e&quot;);str = str.replace(/ì|í|ị|ỉ|ĩ/g, &quot;i&quot;);str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, &quot;o&quot;);str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, &quot;u&quot;);str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, &quot;y&quot;);str = str.replace(/đ/g, &quot;d&quot;);str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, &quot;A&quot;);str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, &quot;E&quot;);str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, &quot;I&quot;);str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, &quot;O&quot;);str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, &quot;U&quot;);str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, &quot;Y&quot;);str = str.replace(/Đ/g, &quot;D&quot;);return str;}Loại bỏ tất cả các kí tự không phải chữ cái và sốstr = str.replace(/[^0-9a-zàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđs]/gi, &#39;&#39;);Xoá dấu cách thừa// Gộp nhiều dấu space thành 1 spacestr = str.replace(/s+/g, &#39; &#39;);// loại bỏ toàn bộ dấu space (nếu có) ở 2 đầu của xâustr.trim();",
      "url": " https://vietanhdev.com/articles/xu-li-tieng-viet-javascript/",
      "categories": "article"
    }
    ,
  

    "til-ban-dang-di-dung-huong": {
      "title": "Share: Bạn không đi chậm, bạn không đi nhanh, bạn đang đi đúng hướng! - Facebook Trịnh Thành",
      "content"	 : "  Link bài viết: https://www.facebook.com/thanh.akita/posts/10208865590339573?pnref=story  Bài viết này được chia sẻ trên Facebook Trịnh Thành. Đôi khi việc so đo cuộc sống của bạn với cuộc sống của những người xung quanh sẽ làm bạn quên mất cuộc sống này là của riêng bạn. “Đừng để tâm thái quá bạn đang đi chậm hay đi nhanh, chỉ cần đi đúng hướng, trong lòng có niềm tin, nơi chúng ta muốn đến nhất định có phong cảnh tươi đẹp nhất.”  Sau đây là một đoạn trích từ bài viết:Bạn không đi chậm, bạn không đi nhanh, bạn đang đi đúng hướng!Nếu bạn 26 tuổi thì hãy thử nhìn quanh. Bạn bè bạn nhất định có những người đã kết hôn sinh đủ con bồng con bế, lại cũng có người chưa nếm vị nụ hôn đầu tiên... Có sinh viên ra trường lương khởi điểm 2000 USD, cũng có hàng ngàn cử nhân loay hoay không kiếm nổi công việc mưu sinh.Bạn có thấy kỳ lạ không?Có phải xã hội này, bằng cách vô tình và cố tình đã giao cho bạn rất nhiều khung “deadline”: 22 tuổi tốt nghiệp đại học, 26 tuổi kết hôn, 30 tuổi có 2 con, 40 tuổi có gần này số dư trong tài khoản, 60 tuổi về hưu và mong đến tầm 80 90 tuổi hãy chết.Nếu bạn thấy mình đang tụt lại quá xa so với những người đồng tuổi, bạn nhất định sẽ không tránh khỏi sợ hãi, thất vọng, buồn chán, như một vận động viên chạy lẹt đẹt dưới cùng trên đường đua. Bạn có hai luồng suy nghĩ: “Mình là kẻ về chót thất bại thảm hại”, hoặc “Mình sẽ dốc sức chạy vượt lên để về nhất.”Lựa chọn thứ hai nghe có vẻ sáng suốt hơn đúng không?Nhưng không, cách nghĩ tốt nhất chính là đừng nghĩ gì cả, hãy cứ chạy thôi, ngẩng cao đầu chạy thẳng về phía trước trên làn đường của bạn.Đừng thắc mắc vì sao cậu bạn kia 25 tuổi đã là CEO. Đừng nguýt mũi ghen tỵ và kiếm lý do không công nhận thành tích của người khác như kiểu “Vì bố nó là chủ tịch”, cũng đừng than thở “Cậu ấy quá giỏi và mình thì không bao giờ có thể giỏi như thế”. Càng đừng tự vấn “Tại sao mình cũng 25 tuổi mà không trở thành CEO được như cậu ta?”Đơn giản thôi, vì bạn có nhiệm vụ khác trong thế giới này. Trong chiếc đồng hồ của cuộc đời bạn, bây giờ vẫn chưa phải lúc.Bạn không cần phải đi nhanh hơn hay bằng ai, vì chúng ta đều đang chạy trên con đường riêng của mỗi người. Đích đến là hàng vô số điểm khác nhau không thể đo đếm. 30 tuổi chưa làm đám cưới chưa phải là ế, 40 tuổi vẫn nỗ lực hết sức để kiếm được công việc mơ ước không phải là muộn lắm rồi, 70 tuổi bắt đầu học lập trình máy tính thì cũng có sao. “Timeline” của tất thảy mọi người không thể nào đều đều giống nhau hết được, vì mỗi chúng ta đều đặc sắc theo cách của riêng mình.Cuộc sống đầy rẫy la liệt những bất công. Bạn thấy có rất nhiều người có vẻ đi xa hơn bạn chỉ vì họ may mắn. Người này sinh ra trong gia đình đầy đủ điều kiện, người kia được trời phú cho sắc đẹp lộng lẫy, lại có người gặp vận may trúng số Vietlott hàng chục tỷ.Cuộc sống mà.Phải chấp nhận thôi.Bạn không thể thay đổi quy luật cuộc sống, vậy chỉ còn cách nghiêm chỉnh tuân thủ luật chơi. Gạt bỏ đi những ấm ức, so đo, đố kỵ tiêu cực trong lòng, đối thủ của bạn ngay lúc này chỉ có một duy nhất: bạn của ngày hôm qua.Câu nói này bạn đã nghe nhiều lắm rồi đúng không?Nhưng lý do duy nhất người ta tua lại nó nhiều đến thế đơn giản là vì nó đúng. Nếu bạn cứ mãi dành thời gian quý báu để nhìn bóng lưng của kẻ đằng trước hay cười nhạo gương mặt lấm tấm mồ hồi của người chạy sau thì bạn chỉ đang làm chậm tiến độ của chính mình. Cuộc sống cho chúng ta mỗi người một đề thi khác nhau, nếu giải bài theo phương pháp của người bên cạnh bạn sẽ trượt. Chi bằng hãy thôi nhìn ngang nhìn dọc, tập trung hết sức vào trận chiến của mình.Bạn không cần chạy nhanh hơn ai hết, bạn chỉ cần chạy hết tốc lực của mình. Không bao giờ là quá sớm. Không bao giờ là quá muộn. Muộn còn hơn không bao giờ. Cuộc sống của bạn mà. Làn đua của riêng bạn mà.Đừng để tâm thái quá bạn đang đi chậm hay đi nhanh, chỉ cần đi đúng hướng, trong lòng có niềm tin, nơi chúng ta muốn đến nhất định có phong cảnh tươi đẹp nhất.Và, kể cả không đặt chân được tới vạch đích đã định, thì bạn cũng đã có cuộc hành trình tuyệt vời đúng không nào?Thế giới này là nơi chỉ dành cho những kẻ sẵn sàng nhấc chân lên trải nghiệm, sẵn sàng trả giá, sẵn sàng chịu trách nhiệm cho mọi quyết định của đời mình, sẵng sàng nghĩ khác đi và sống đúng với bản ngã. Và nếu như chúng ta phải chịu trách nhiệm về trải nghiệm của chính mình, thì phải trải nghiệm nó một cách xứng đáng nhất.",
      "url": " https://vietanhdev.com/til/ban-dang-di-dung-huong/",
      "categories": "til"
    }
    ,
  

    "til-music-mat-biec": {
      "title": "Share: Mắt Biếc - TeA ft. PCGL (Bài nhạc được chuyển thể từ truyện dài của T.G Nguyễn Nhật Ánh)",
      "content"	 : "Lyrics:Đọc 1 ( TeA ) :Thời giờ đã cuốn bay đi những ngày tuổi trẻ còn xanh ngờiMột màu phượng vĩ mới nở hôm qua…mà đã cháy đỏ tim anh rồiĐã lâu ta ko về trường vắngEm còn tinh khôi nhành phượng thắmMắt biếc quay nhìn về khoảng trời..chả biết trong lòng anh đượm nắng !!Khi phút đầu đang ngỡ rồi giật mình tan vỡ, em kể câu chuyện người vừa quaĐã lâu chưa gặp không biết bây giờ tim em đã nở mấy mùa hoa??Nhớ mắt em buồn và còn nhiều sâu thẳm..2 đứa chợt lặng mình ngồi imChắc lòng em nghĩ về phố thị..anh nhớ chuyện mình giữa đồi simNhành hoa cỏ may như chiếc tuổi hồng..gió cuốn xa xa về cuối trờiTaynguyen chợt gọi trên con đường về nhưng tim em chả ở núi đồiLàm sao đây hả mắt biếc ơi..chỉ là tiếng lòng muốn viết thôiThời gian chả níu tay ai lại qua những ngày buồn bã mải miết rơiQuán xưa hay nhắc ôi những chiều ngây ngất…chắc giờ em chả còn nguyện giữTa chả bận lòng , chả vấn vương khi 2 mình nhắc về chuyện cũChợt thấy hạt sương trên đôi mi anh rồi.. biết bao giờ đọng thành trắng xóaNhư có nỗi buồn nào đó chơi vơi lặng lẽ rơi trên từng nhánh láAnh mang hoài niệm màu lan tím..để những đêm trăng còn mơ lạiMắt biếc em nhìn sao quá xa xôi a tiếc những ngày còn thơ dạiTừng nghĩ hồi đó chỉ vô tình đưa em vào trang nhật hồng đời mình sắp viết thôiNhưng tiếc là buồn nào mà dễ phai đâu phai ko mắt biếc ơi??Điệp Khúc 1 :Đời mình còn là mấy thoáng..để cho tuổi hồng này qua điNếu mai em về xin hãy ngồi lại để mình cùng nghe điệu chapiĐâu đó vang lên giữa mây trờiGóc phố buồn chân lúy túy..” về thôi ai ơi đã say rồi “Hãy thiêu hồn a cháy bỏng..bằng chính ngọn lửa của riêng em ….‘’ Phố núi nhắc tên em rồi ‘’Đêm cứ dài mải miết trôiAnh thấy buồn lắm mắt biếc ơi..!!! ( Anh thấy buồn lắm Mắt Biếc ơi )Đọc 2 ( PCGL ) :Mắt biếc em chả nhìn thấy anh ! … mắt biếc chỉ nghĩ về khoảng trờiTrong phút giây đó [ thì em vẫn ] môi cười nhưng tim anh tan từng mảng rồiNếu xem nhứ đây chỉ là phút mơ mộng - anh sẽ nguyện mơ cả nghìn lầnCho anh được thấy bờ môi em cười khi đó anh biết là tình gầnMấy chốc mình được ngồi kề nhau – Thì giờ lại nỡ vộ tan biếnTên em vẫn còn vương lại trong tim tựa như hương – sắc – màu lan tímTa đứng lại chờ mà ngơ ngác – Vì em đã bên tình thơ khácEm để lại ta là một nụ cười nhạt và cả bầu trời buồn xơ xácMắt Biếc em trông [ về nơi khuất xa xôi ] – Anh hoài nhìn lại phút tay cầmYên vui chỉ đến với anh bất chợt – Nhưng chắc chả đến hai lần …Liệu em có về bên lối nhỏ khi xưa - Nơi đó gió thổi mây hoang dạiĐể nghe khúc nhạc đong đưa những chiều buồn tênh còn vang lạiVà còn không em ? ..Những ngày say xưa chập chiều Mắt BiếcBao êm đềm kia [ đến nay vẫn còn đó ] bên trang nhật hồng xấp viếtGiá như em về lại với Tây Nguyên nghe núi rừng đang thở..Nhưng mà thành phố hoa mĩ là nơi mà em đã chọn mùa lan nởĐiệp Khúc 2 :Oh ! Em từng yêu tôi chưa mắt biếc ơi ?Tình thơ tôi trao đến em nhưng đôi môi vẫn còn ‘’ tiếc ‘’ lời …… Em đã bên ai rồi mắt biếc ơi ?Em chả cần nói – Thi tim tôi cũng tự khắc biết rồi ….… Em đã yêu ai rồi mắt biếc ơi ?Anh vỡ tan mất – Nếu một ngày em và họ xiết môiOh ! Em nỡ quên tôi sao Mắt Biếc ơi !Thời gian chẳng níu tay em – [ hãy cứ để ] tình ta mãi miết trôi#  12/07/2016Taynguyen sầu lắng.",
      "url": " https://vietanhdev.com/til/music-mat-biec/",
      "categories": "til"
    }
    ,
  

    "articles-kinh-nghiem-ban-dau-voi-fedora": {
      "title": "Kinh nghiệm ban đầu với Fedora Linux",
      "content"	 : "Giới thiệu Fedora LinuxCũng lâu rồi tôi không viết bài trên blog của mình. Hôm nay nhân dịp cài đặt và dùng thử hệ điều hành Fedora Linux (bản Workstation 24), tôi muốn viết một bài chia sẻ cho mọi người những kinh nghiệm đầu tiên về việc sử dụng Fedora.Trước hết, tôi xin phép so sánh Fedora với một bản phân phối linux hết sức nổi tiếng - Ubuntu. Tôi đã từng sử dụng Ubuntu cho máy tính của mình trong một thời gian dài và hết sức yêu thích nó vì sự tự do, thoải mái, và những trải nghiệm người dùng tinh tế.Fedora cũng là hệ điều hành nguồn mở dựa trên nhân linux, nó cũng miễn phí và đem lại cảm giác tự do, thoải mái như trên Ubuntu vậy. Thế đâu là sự khá biệt giữa chúng? Ubuntu được phát triển tập trung trở thành một hệ điều hành ổn định, dễ dùng để có thể thay thế Windows. Còn ở Fedora, ta tìm thấy một hệ điều hành luôn được tích hợp những chức năng, công nghệ mới nhất của thế giới nguồn mở. Fedora là phiên bản cộng đồng của Red Hat, một bản phân phối Linux thương mại khá nổi tiếng sử dụng cho máy chủ. Các tính năng mới nhất luôn được đưa vào Fedora, kiểm soát ổn định một thời gian trước khi trau chuốt và đưa vào phiên bản thương mại Red Hat.Với sự trưởng thành của mình, Fedora dần đạt được sự ổn định, tinh tế và trở thành một trong những bản phân phối Linux hàng đầu. Trải nghiệm, sử dụng Fedora sẽ trang bị cho chúng ta nhiều kiến thức về linux, về những công nghệ nguồn mở mới nhất.Cài đặt FedoraTôi thực hiện cài đặt Fedora từ USB lên ổ cứng định dạng MBR - ext4. Phân vùng cài đặt của tôi như sau:Vì Linux là hệ điều hành tôi sử dụng thường xuyên ở trường nên tôi để ổ cài đặt 100GB. Phân vùng SWAP 4GB cho máy tính ram 8GB. Thực ra phân vùng cài đặt Fedora, và SWAP như vậy là hơi nhiều nếu bạn có ít phần mềm. Sau khi cài đặt Fedora và vài phần mềm cơ bản, dung lượng phân vùng được sử dụng chưa tới 10GB. Tuy nhiên, nếu máy bạn dư dả ổ cứng tại sao bạn không để ổ cài đặt hệ điều hành lớn hơn 1 chút chứ?Bạn có thể tải Fedora Workstation về từ địa chỉ https://getfedora.org/en/workstation/download/Việc ghi ra USB đề thực hiện cài đặt bạn có thể dùng YUMI – Multiboot USB Creator. Ngoài Fedora, YUMI còn hỗ trợ ghi nhiều bản phân phối Linux, phần mềm khác ra USB bao gồm cả Windows, Antivirus, đĩa cứu hộ. Đặc biệt bạn có thể tạo một USB chứa nhiều bản cài đặt bên trong.Một số giao diện của bản Fedora 24 tôi đang dùng:  Màn hình đăng nhập:  Desktop:  Màn hình cửa sổ - ứng dụng (di chuột về góc trên bên trái màn hình hoặc ấn Alt + F1):Những việc nên làm sau khi cài đặt Fedora:Thiết lập thao tác chạm để click cho Touchpad nếu bạn dùng laptopThông thường khi tôi dùng Ubuntu, mặc định thao tác chạm một ngón tay vào Touchpad tương đương với click chuột. Tuy nhiên trên Fedora mặc định tắt thiết lập đó, tức là bạn phải bấm vào khu vực nút chuột để thực hiện click.Để chuyển sang chế độ “Tap to Click”, bạn vào Settings (ấn bật Menu góc phải trên màn hình &amp;gt; Chọn biểu tượng Cờ lê tô vít)Tiếp theo chọn Mouse &amp;amp; Touchpad và bật thiết lập Tap to Click lên. Ở đây chúng ta cũng tìm thấy nhiều thiết lập khác cho chuột và Touchpad.Bật bộ gõ tiếng ViệtFedora có sẵn bộ gõ Tiếng Việt. Ta có thể bật nó bằng cái vào Settings &amp;gt; Region &amp;amp; Language &amp;gt; Nhấp dấu + để thêm bộ gõ &amp;gt; Tìm đến Vietnamese &amp;gt; Chọn kiểu bộ gõ tiếng Việt bạn sử dụng. Tôi dùng kiểu gõ telex (gõ s,f,j,x,r cho các dấu câu) nên tôi chọn Vietnamese (telex (m17n)). Bạn có thể chuyển qua lại giữa các bộ gõ qua menu hệ thống góc trên bên phải nhé.Thiết lập một số phím tắtMở terminalNếu bạn đã quen dùng Ubuntu và một số bản Linux khác, bạn sẽ quen với cách ấn Ctrl + Alt + t để mở terminal (cửa sổ dòng lệnh). Trên Fedora mặc định không có phím tắt này.Để cài đặt nó ta vào Settings &amp;gt; Keyboard &amp;gt; Custom shortcuts &amp;gt; Nhấp dấu + để thêm phím tắt. Nhập Name là Terminal và Command là gnome-terminal.Ta đã thấy xuất hiện phím tắt Terminal nhưng trạng thái Disabled. Nhấp vào Disabled và ấn Ctrl + Alt + t để gán phím tắt cho nó.Một số thiết lập phím tắt hữu ích khácChuyển kiểu gõ: Thiết lập phím tắt chuyển đổi giữa bộ gõ Tiếng Việt và Tiếng Anh: Settings &amp;gt; Keyboard &amp;gt; Switch to next input source và gán phím tắt vd Ctrl + Space.Ẩn tất cả cửa sổ: Settings &amp;gt; Keyboard &amp;gt; Navigation &amp;gt; Hide all normal windows. Tôi thường gán phím Win + d cho việc này.Cài đặt các phần mềmSử dụng kho Software của FedoraTrên linux, phần mềm được quản lí theo các gói (packages). Ở Fedora, bạn có thể sử dụng phần mềm Software để cài đặt các gói.Mở Software ở màn hình ứng dụng (đưa chuột lên góc trên bên trái màn hình).Bạn có thể tìm thấy khá nhiều phần mềm hữu ích tại đây như Chromium, Thunderbird, GIMP, Audacity… Tuy nhiên lượng phần mềm chưa được đưa lên đây vẫn còn rất nhiều. Do vậy, mọi người nên học sử dụng trình quản lí gói qua dòng lệnh như dnf để có thể thực hiện tốt việc cài đặt và quản lí các phần mềm trên kho của Fedora.Sử dụng trình quản lí gói dnfTừ phiên bản Fedora 22, Fedora đã chuyển sang sử dụng trình quản lí gói phần mềm dnf thay cho yum như trước đây. Chúng ta sẽ có một trình quản lí gói mạnh mẽ và thông minh hơn, tuy nhiên cách sử dụng cũng tương tự như yum. Bạn có thể sử dụng một số lệnh quản lí gói cơ bản từ Terminal để cài đặt các phần mềm cần thiết như sau:  Cập nhật danh sách các gói (phần mềm)sudo dnf check-update  Nâng cấp các gói đã cài đặtsudo dnf upgrade  Tìm kiếm các gói mới..+ Tìm theo tênsudo dnf search &amp;lt;tên gói&amp;gt;..+ Tìm theo tên và mô tảsudo dnf search all &amp;lt;tên gói&amp;gt;  Xem thông tin về một góisudo dnf info &amp;lt;tên gói&amp;gt;  Xem danh sách các thành phần phụ thuộcsudo dnf repoquery --requires package  Cài đặt gói phần mềmsudo dnf install &amp;lt;tên gói 1&amp;gt; &amp;lt;tên gói 2&amp;gt; ...hoặc sử dụng lệnh này để tự động xác nhận “yes” khi dnf xác nhận về gói phần mềmsudo dnf install -y &amp;lt;tên gói&amp;gt;  Cài đặt gói từ localsudo dnf install &amp;lt;tên gói&amp;gt;.rpm  Gỡ gói đã càisudo dnf erase &amp;lt;tên gói&amp;gt;  Bạn có thể xem thêm hướng dẫn sử dụng dnf bằng cách gõman dnfNâng cấp FedoraSau khi cài đặt Fedora, bạn nên nâng cấp hệ thống bằng lệnh:sudo dnf updateViệc nâng cấp này sẽ mất một thời gian, tùy thuộc vào tốc độ internet của bạn.Kích hoạt kho phần mềm Fusion RPMKho phần mềm mặc định của Fedora đã có rất nhiều phần mềm cho nhu cầu sử dụng bình thường, tuy nhiên bạn có thể thêm kho phần mềm Fusion RPM để mở rộng hơn nữa số gói phần mềm chúng ta có thể cài đặt bằng lệnh dnf. Thực hiện trên Fedora 24 như sau:  Thêm kho phần mềm nguồn mở miễn phísudo dnf install --nogpgcheck http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-24.noarch.rpm  Thêm kho phần mềm nonfree độc quyềnsudo dnf install --nogpgcheck http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-24.noarch.rpmTrên đây là một số kinh nghiệm tôi thu được khi bắt đầu sử dụng Fedora. Hãy cùng chia sẻ kinh nghiệm các bạn từng có với Fedora nhé!",
      "url": " https://vietanhdev.com/articles/kinh-nghiem-ban-dau-voi-fedora/",
      "categories": "article"
    }
    ,
  

    "articles-thuat-toan-loang-trong-do-min": {
      "title": "Thuật toán loang ứng dụng trong game dò mìn",
      "content"	 : "Thuật toán loangThuật toán loang (thuật toán vết dầu loang) là một thuật toán dùng khá nhiều trong tin học, ứng dụng trong các bài toán thực tế như các bài toán tìm đường đi, game dò mìn, game line98…Gọi là thuật toán loang vì nguyên lí của thuật toán này rất giống với hiện tượng loang của chất lỏng. Khi ta đổ nước xuống một về mặt phẳng khô, nước có thể loang ra những khu vực xung quanh. Tương tự, thuật toán loang (trong một ma trận) sử dụng kĩ thuật “xét các ô liền kề”, rồi “loang” dần ra từ một vị trí ban đầu.Trong trò chơi dò mìn: Ta sẽ thấy được sự tương tự “loang” chất lỏng trong trò dò mìn. Khi bạn mở một ô không chứa mìn sẽ kéo theo việc mở các không chứa mìn xung quanh nó. Từ ô bạn đã mở, việc mở này sẽ “loang” rộng ra các ô không chứa mìn xung quanh.Thuật toán loang ứng dụng trong game dò mìnThuật toán loang ứng dụng trong dò mìn thực ra khá đơn giản. Ta thấy vùng được mở mỗi khi người dùng click vào một ô trống là toàn bộ vùng trống chứa ô đó, với rìa là các ô có mật độ (số mìn xung quanh) lớn hơn 0. Vậy là việc mở mìn được thực hiện từ ô trống ban đầu, “loang” dần ra các ô xung quanh, thấy rìa chứa ô trống mật độ &amp;gt; 0 thì dừng. Thuật toán đệ quy được mô tả như sau:  Bước 1: Chọn trống ban đầu là ô đang xét.  Bước 2: Mở ô đang xét. Nếu ô đang xét có mật độ bằng 0, thực hiện xét tất cả các ô xung quanh nó; với mỗi ô xung quanh chưa mở, ta lại thực hiện bước 2 với nó.  Bước 3: Kết thúc việc mở ô.Như vậy, khi gặp ô trống và mật độ bằng 0, việc mở tiếp các ô xung quanh mới được thực hiện; còn khi chạm tới rìa (ô trống có mật độ &amp;gt; 0) thì việc xét mở tiếp các ô xung quanh được dừng lại.Chạy thuật toán với một góc “bản đồ” trò dò mìn như sau:Giả sử ban đầu có các vị trí mìn và mật độ như hình. Tất cả các ô đều chưa mở. Người chơi click mở ô màu xanh.Phần ô được mở ra sau khi click vào ô màu xanh trên được biểu thị màu xanh như hình dưới:Thuật toán sẽ xét tất cả các ô xung quanh ô màu xanh ban đầu từ vị trí trái, trên theo chiều kim đồng hồ. Cụ thể ô có mật độ 1 được xét đầu tiên. Vì ô này có mật độ lớn hơn 0 nên chương trình chỉ mở, không xét thêm các ô xung quanh ô 1 nữa.Tiếp đó thuật toán xét đến ô số 0 (màu vàng).Do ô này có mật độ bằng 0 nên bước 2 của thuật toán được thực hiện đệ quy lại với tất cả các ô trống chưa mở xung quanh ô màu vàng này. Việc mở ô lần lượt được thực hiện như các hình dưới (các ô trống được lên màu là các ô được mở).……Và cuối cùng toàn bộ vùng trống sẽ được mởThuật toán này đã được tôi sử dụng trong trò chơi dò mìn viết bằng ngôn ngữ C. Mã nguồn tại: https://github.com/vietanhdev/minesweeper-in-cĐoạn chương trình mô tả bước 2://Mở một ô trốngvoid open_empty_pos(int row, int col) {int i, j;opened[row][col] = 1; // Đánh dấu ô đang xét đã được mởif (p[row][col] == EMPTY) { // Nếu ô đang xét trống và có mật độ bằng 0// Xét các ô xung quanhfor (i = -1; i &amp;lt; 2; i++) {    for (j = -1; j &amp;lt; 2; j++) {if (i!=0 || j!=0) {if (row + i &amp;gt;= 0 &amp;amp;&amp;amp; row + i &amp;lt;= maxrow &amp;amp;&amp;amp; col + j &amp;gt;=0 &amp;amp;&amp;amp; col + j &amp;lt;= maxcol) { // Nếu ô nằm trong bànif (!opened[row + i][col + j])// Nếu ô chưa được mởopen_empty_pos(row + i, col + j);}}}}}}Link:Thông tin về trò chơi dò mìn: https://vi.wikipedia.org/wiki/D%C3%B2m%C3%ACn(tr%C3%B2_ch%C6%A1i)",
      "url": " https://vietanhdev.com/articles/thuat-toan-loang-trong-do-min/",
      "categories": "article"
    }
    ,
  

    "articles-thuat-toan-sinh-min-trong-tro-choi-do-min-minesweeper": {
      "title": "Xây dựng thuật toán sinh mìn trong trò chơi dò mìn Minesweeper viết bằng C",
      "content"	 : "Gần đây, Việt Anh mới viết lại trò chơi dò mìn cổ điển bằng ngôn ngữ C. Trò chơi này có thể thực hiện với những thuật toán đơn giản. Bài viết này sẽ nói về thuật toán khởi tạo mìn mỗi lúc bắt đầu trò chơi.Trước hết tôi muốn gửi bạn file mã nguồn trò dò mìn tôi viết:https://github.com/vietanhdev/minesweeper-in-c/blob/master/minesweeper.cThuật toánỞ trò chơi này, tôi sử dụng mảng nguyên hai chiều p[i][j] (i chạy từ 0 &amp;gt; số hàng lớn nhất - 1; j chạy từ 0 &amp;gt; số cột lớn nhất - 1) để lưu trữ trạng thái mìn của các ô với các giá trị:  9: “ô có mìn”  0: “ô trống và xung quanh không có mìn”  1: “ô trống xung quanh có 1 mìn”  2: “ô trống xung quanh có 2 mìn”  3: “ô trống xung quanh có 3 mìn”  4: “ô trống xung quanh có 4 mìn”Trong đó khai báo hai hằng số const EMPTY, MINE tương ứng với giá trị 0 (ô trống) và 9 (có mìn).Minh họa giá trị mảng p tại một thời điểm (level 2):Khi người chơi bắt đầu trò chơi mới ở level 2, nhiệm vụ của chương trình là tạo ra một bàn kích thước 16x16 với 30 quả mìn đặt ngẫu nhiên. Tôi sử dụng thuật toán sinh số ngẫu nhiên để tìm lần lượt các ô đặt mìn, rồi sau đó đếm số mìn xung quanh các ô trống và ghi số lượng (1, 2, 3, 4) vào các ô trống đó. Lưu ý là ở trò chơi này chúng ta không để ô nào được bao quanh bởi &amp;gt; 4 quả mìn (tức là mỗi ô chỉ được bao quanh bởi 0, 1, 2, 3 hoặc 4 quả). Việc này cũng cần được kiểm tra trong lúc sinh mìn.Thuật toán được mô tả như lưu đồ sau:Thuật toán là vậy, code trên C thế nào?Sinh mìn ngẫu nhiên:Chúng ta sẽ đi sinh một số ngẫu nhiên có giá trị từ 0 đến (số ô trong bàn - 1). Vị trí hàng (0 -&amp;gt; hàng lớn nhất) và vị trí cột (0 -&amp;gt; cột lớn nhất) được tính như sau:row = (r - 1) / (maxcol + 1);col = r - row * (maxrow + 1) - 1;row: hàng; col: cột; maxcol: chỉ số cột lớn nhất; maxrow: chỉ số hàng lớn nhất.Chúng ta sẽ sử dụng hàm rand() có sẵn trong thư viện stdlib.h để tạo một số ngẫu nhiên từ 0 đến (số ô trong bàn - 1). Vd Code để tạo số từ 0 đến 19 như sau:#include &amp;lt;stdlib.h&amp;gt; //Khai báo thư viện stdlib.h...int ctime_t t;srand((unsigned) time(&amp;amp;t)); // Khởi tạo bộ tạo số ngẫu nhiênc = rand() % 20; // In ra một giá trị ngẫu nhiên trong đoạn [0;19] và gán vào biến c...Việc còn lại là kết hợp hàm rand() để sinh ra số hàng và số cột mong muốn thôi. Bạn có thể tham khảo trong mã nguồn chương trình của tôi.Mã nguồn mô phỏng thuật toán (dựa trên mã nguồn chương trình tôi đã viết):Chú ý: maxrow, maxcol lần lượt là chỉ số của hàng lớn nhất và cột lớn nhất (ở dưới cùng và đầu cùng bên phải).// Hàm đến số mìn quanh vị trí (row, col)int mi_count(int row, int col){  int i,j;  int near_minum = 0; // Biến đếm số mìn trong ô  // Lặp qua tất cả các ô xung quanh ô đang xét  for (i = -1; i &amp;lt; 2; i++) {    for (j = -1; j &amp;lt; 2; j++) {      if (row + i &amp;gt;= 0 &amp;amp;&amp;amp; row + i &amp;lt;= maxrow &amp;amp;&amp;amp; col + j &amp;gt;= 0 &amp;amp;&amp;amp; col + j &amp;lt;= maxcol){        if (p[row + i][col + j] == MINE)        near_minum += 1;      }    }  }  return near_minum;}// Hàm tạo mìnvoid gen_mine(){  int i, j;  time_t t;  int r;  int row, col;  int iminum = 0; // số mìn đã đặt và b  srand((unsigned) time(&amp;amp;t));  while (iminum &amp;lt; minum) { // Lặp thêm mìn với điều kiện số mìn đã đặt &amp;lt; số mìn cần thiết    r = rand() % ((maxrow + 1) * (maxcol + 1));    row = (r - 1) / (maxcol + 1); // Sinh số hàng ngẫu nhiên    col = r - row * (maxrow + 1) - 1; // Sinh số cột ngẫu nhiên    int should_add = 1;    /* Biến này lưu trạng thái của ô còn đưa được mìn vào không (1: có; 0: không).    Chúng ta sẽ kiểm tra tất cả các ô trống xung quanh của ô đang xét.    Với mỗi ô lại đếm số mìn xung quanh nó. Nếu tồn tại một ô trống ở xung quanh    ô đang xét đã nằm cạnh 4 quả mìn, thì ta không thể để thêm một quả nữa cạnh nó.    (số mìn xung quanh mỗi ô trống luôn &amp;lt;= 4 */    for (i = -1; i &amp;lt; 2; i++) {    for (j = -1; j &amp;lt; 2; j++) {      if (p[row + i][col + j] != MINE &amp;amp;&amp;amp; mi_count(row + i, col + j) &amp;gt; 3) {      should_add = 0;      }    }  }    if (p[row][col] == EMPTY &amp;amp;&amp;amp; should_add == 1) { /* Nếu ô đang xét còn trống, và thỏa các điều kiện ở trên thì thực hiện đặt mìn */      p[row][col] = MINE;      iminum += 1;    };  }}Lưu ý: Thuật toán của tôi chọn ngẫu nhiên một ô trống ở trong bàn, tức là ô đó có thể đã chứa mìn hoặc không chứa mìn. Cách tốt hơn là sau khi đặt mìn các bạn đánh dấu ô đó lại, sau đó ở vòng lặp sau chỉ thực hiện chọn ngẫu nhiên một ô từ trong số các ô không chứa mìn. Thử xem nhé!Sau khi thực hiện tạo toàn bộ số mìn cần thiết, ta sẽ đếm số mìn ở xung quanh từng ô trống và ghi các giá trị tương ứng 0, 1, 2, 3, 4 vào ô trống đó. Đoạn chương trình làm việc này như sau:void gen_num(){  int i,j;  for (i = 0; i &amp;lt;= maxrow; i++) {    for (j = 0; j &amp;lt;= maxcol; j++) {      if (p[i][j] == EMPTY){ // nếu ô đang xét trống        p[i][j] = mi_count(i, j); // gán giá trị số mìn xung quanh      }    }  }}Dò mìn là một trò chơi khá nổi tiếng vẫn được nhiều người yêu thích. Với các bạn mới học lập trình thì trò chơi này là cơ hội tốt để chúng ta luyện tập tư duy lập trình cơ bản. Thuật giải của tôi còn nhiều chỗ có thể tối ưu. Ví dụ như thay vì phải viết hàm đếm mìn quanh một vị trí, chạy đi chạy lại với tất cả các ô xung quanh của ô định đặt mìn, ta sử dụng một mảng min_num[][] lưu số lượng mìn xung quanh mỗi ô. Mỗi khi đặt thêm mìn vào vị trí (i,j), ta +1 cho tất cả các vị trí xung quanh min_num[i][j]. Sử dụng mảng lưu số lượng mìn như vậy tiết kiệm khá nhiều chi phí tính toán. :DChúc mọi người có thể viết được game dò mìn của riêng mình nhé!",
      "url": " https://vietanhdev.com/articles/thuat-toan-sinh-min-trong-tro-choi-do-min-minesweeper/",
      "categories": "article"
    }
    ,
  

    "articles-thay-doi-do-phan-giai-man-hinh-raspi": {
      "title": "Thay đổi độ phân giải màn hình Raspberry Pi",
      "content"	 : "Khi cài đặt các phiên bản hệ điều hành dựa trên Linux, tôi nhận thấy nhiều hệ điều hành đôi lúc không nhận được độ phân giải thật của màn hình máy tính, dẫn đến việc hiển thị màn hình với độ phân giải thấp hơn mức bình thường, khiến các đối tượng trên màn hình bị mờ, nhìn rất xấu.Trên với các hệ điều hành Fedora, Ubuntu… cài trên máy tính thông thường ta có thể thêm các cấu hình độ phân giải cho màn hình một cách thủ công qua hướng dẫn của link bên dưới:http://askubuntu.com/questions/330293/how-do-i-set-a-monitor-resolution-that-is-not-available-in-the-display-settingsTuy nhiên, khi thực hiện hướng dẫn như trên với Raspberry Pi - RasPi (ở đây tôi sử dụng Raspbian jessie), bạn sẽ không tìm thấy tệp tin /etc/X11/xorg.conf. Bạn sẽ có một cách khác để đặt lại độ phân giải cho màn hình.Thay đổi độ phân giải màn hình cho Raspberry Pi sử dụng tệp cấu hình config.txtVì không có BIOS, các thiết lập cấu hình ở Raspberry Pi được lưu trữ trong tệp config.txt lưu tại đường dẫn /boot/config.txt.Bạn có thể chỉnh sửa tệp này bằng cách lắp thẻ nhớ của Pi sang một máy tính khác (sử dụng hệ điều hành Linux, OS X) để chỉnh sửa tệp cấu hình config.txt bằng bất kì trình chỉnh sửa văn bản nào. Cách này có thể dùng trong trường hợp bạn không thể truy cập chỉnh sửa tệp cấu hình trực tiếp trên RasPi). Chú ý: với máy tính Windows bạn có thể sẽ không nhìn thấy các phân vùng của hệ điều hành cài trên RasPi.Chỉnh sửa tệp config.txt ngay trên RasPi:      Đăng nhập RasPi        Mở terminal và gõ lệnh sau để mở tệp config.txt bằng nano:  sudo nano /boot/config.txt  Uncomment (Xóa dấu # ở đầu) các dòng có hdmi_group và hdmi_mode và thay đổi các giá trị của hdmi_group và hdmi_mode cho phù hợp với màn hình của bạn.Các giá trị cho hdmi_group và hdmi_mode tương ứng với màn hình sử dụng (nguồn http://elinux.org/RPiconfig):hdmi_group : Loại HDMIKhông ghi rõ loại hoặc ghi giá trị 0 : sử dụng loại được lựa chọn trong edid (Extended Display Identification Data).hdmi_group=1   CEAhdmi_group=2   DMThdmi_mode defines : Độ phân giải màn hình được sử dụng.Nếu bạn không tìm thấy độ phân giải màn hình của mình, hãy đọc thêm tại link này.Các giá trị ứng với hdmi_group=1 (CEA)hdmi_mode=1    VGAhdmi_mode=2    480p   60 Hzhdmi_mode=3    480p   60 Hz  Hhdmi_mode=4    720p   60 Hzhdmi_mode=5    1080i  60 Hzhdmi_mode=6    480i   60 Hzhdmi_mode=7    480i   60 Hz  Hhdmi_mode=8    240p   60 Hzhdmi_mode=9    240p   60 Hz  Hhdmi_mode=10   480i   60 Hz  4xhdmi_mode=11   480i   60 Hz  4x Hhdmi_mode=12   240p   60 Hz  4xhdmi_mode=13   240p   60 Hz  4x Hhdmi_mode=14   480p   60 Hz  2xhdmi_mode=15   480p   60 Hz  2x Hhdmi_mode=16   1080p  60 Hzhdmi_mode=17   576p   50 Hzhdmi_mode=18   576p   50 Hz  Hhdmi_mode=19   720p   50 Hzhdmi_mode=20   1080i  50 Hzhdmi_mode=21   576i   50 Hzhdmi_mode=22   576i   50 Hz  Hhdmi_mode=23   288p   50 Hzhdmi_mode=24   288p   50 Hz  Hhdmi_mode=25   576i   50 Hz  4xhdmi_mode=26   576i   50 Hz  4x Hhdmi_mode=27   288p   50 Hz  4xhdmi_mode=28   288p   50 Hz  4x Hhdmi_mode=29   576p   50 Hz  2xhdmi_mode=30   576p   50 Hz  2x Hhdmi_mode=31   1080p  50 Hzhdmi_mode=32   1080p  24 Hzhdmi_mode=33   1080p  25 Hzhdmi_mode=34   1080p  30 Hzhdmi_mode=35   480p   60 Hz  4xhdmi_mode=36   480p   60 Hz  4xHhdmi_mode=37   576p   50 Hz  4xhdmi_mode=38   576p   50 Hz  4x Hhdmi_mode=39   1080i  50 Hz  reduced blankinghdmi_mode=40   1080i 100 Hzhdmi_mode=41   720p  100 Hzhdmi_mode=42   576p  100 Hzhdmi_mode=43   576p  100 Hz  Hhdmi_mode=44   576i  100 Hz  hdmi_mode=45   576i  100 Hz  Hhdmi_mode=46   1080i 120 Hz  hdmi_mode=47   720p  120 Hz  hdmi_mode=48   480p  120 Hz  hdmi_mode=49   480p  120 Hz  Hhdmi_mode=50   480i  120 Hz  hdmi_mode=51   480i  120 Hz  Hhdmi_mode=52   576p  200 Hz  hdmi_mode=53   576p  200 Hz  Hhdmi_mode=54   576i  200 Hz  hdmi_mode=55   576i  200 Hz  Hhdmi_mode=56   480p  240 Hz  hdmi_mode=57   480p  240 Hz  Hhdmi_mode=58   480i  240 Hz  hdmi_mode=59   480i  240 Hz  HH : Màn hình 16:9 (thay vì 4:3 như bình thường).2x : các điểm ảnh được gấp đôi (với tần số cao hơn, các điểm ảnh được nhắc lại 2 lần).4x : các điểm ảnh được gấp tư (với tần số cao hơn, các điểm ảnh được nhắc lại 4 lần).Các giá trị ứng với hdmi_group=2 (DMT)Chú ý: Theo http://www.raspberrypi.org/phpBB3/viewtopic.php?f=26&amp;amp;t=20155&amp;amp;p=195417&amp;amp;hilit=2560x1600#p195443có một sự giới hạn với các xung ảnh. Độ phân giải tối đa được hỗ trợ là 1920x1200 @60 Hz với các điểm trống được tối giản (Reduced blanking).hdmi_mode=1    640x350    85 Hzhdmi_mode=2    640x400    85 Hzhdmi_mode=3    720x400    85 Hzhdmi_mode=4    640x480    60 Hzhdmi_mode=5    640x480    72 Hzhdmi_mode=6    640x480    75 Hzhdmi_mode=7    640x480    85 Hzhdmi_mode=8    800x600    56 Hzhdmi_mode=9    800x600    60 Hzhdmi_mode=10   800x600    72 Hzhdmi_mode=11   800x600    75 Hzhdmi_mode=12   800x600    85 Hzhdmi_mode=13   800x600   120 Hzhdmi_mode=14   848x480    60 Hzhdmi_mode=15   1024x768   43 Hz  DO NOT USEhdmi_mode=16   1024x768   60 Hzhdmi_mode=17   1024x768   70 Hzhdmi_mode=18   1024x768   75 Hzhdmi_mode=19   1024x768   85 Hzhdmi_mode=20   1024x768  120 Hzhdmi_mode=21   1152x864   75 Hzhdmi_mode=22   1280x768          Reduced blankinghdmi_mode=23   1280x768   60 Hzhdmi_mode=24   1280x768   75 Hzhdmi_mode=25   1280x768   85 Hzhdmi_mode=26   1280x768  120 Hz  Reduced blankinghdmi_mode=27   1280x800          Reduced blankinghdmi_mode=28   1280x800   60 Hz  hdmi_mode=29   1280x800   75 Hz  hdmi_mode=30   1280x800   85 Hz  hdmi_mode=31   1280x800  120 Hz  Reduced blankinghdmi_mode=32   1280x960   60 Hz  hdmi_mode=33   1280x960   85 Hz  hdmi_mode=34   1280x960  120 Hz  Reduced blankinghdmi_mode=35   1280x1024  60 Hz  hdmi_mode=36   1280x1024  75 Hz  hdmi_mode=37   1280x1024  85 Hz  hdmi_mode=38   1280x1024 120 Hz  Reduced blankinghdmi_mode=39   1360x768   60 Hz  hdmi_mode=40   1360x768  120 Hz  Reduced blankinghdmi_mode=41   1400x1050         Reduced blankinghdmi_mode=42   1400x1050  60 Hz  hdmi_mode=43   1400x1050  75 Hz  hdmi_mode=44   1400x1050  85 Hz  hdmi_mode=45   1400x1050 120 Hz  Reduced blankinghdmi_mode=46   1440x900          Reduced blankinghdmi_mode=47   1440x900   60 Hz  hdmi_mode=48   1440x900   75 Hz  hdmi_mode=49   1440x900   85 Hz  hdmi_mode=50   1440x900  120 Hz  Reduced blankinghdmi_mode=51   1600x1200  60 Hz  hdmi_mode=52   1600x1200  65 Hz  hdmi_mode=53   1600x1200  70 Hz  hdmi_mode=54   1600x1200  75 Hz  hdmi_mode=55   1600x1200  85 Hz  hdmi_mode=56   1600x1200 120 Hz  Reduced blankinghdmi_mode=57   1680x1050         Reduced blankinghdmi_mode=58   1680x1050  60 Hz  hdmi_mode=59   1680x1050  75 Hz  hdmi_mode=60   1680x1050  85 Hz  hdmi_mode=61   1680x1050 120 Hz  Reduced blankinghdmi_mode=62   1792x1344  60 Hz  hdmi_mode=63   1792x1344  75 Hz  hdmi_mode=64   1792x1344 120 Hz  Reduced blankinghdmi_mode=65   1856x1392  60 Hz  hdmi_mode=66   1856x1392  75 Hz  hdmi_mode=67   1856x1392 120 Hz  Reduced blankinghdmi_mode=68   1920x1200         Reduced blankinghdmi_mode=69   1920x1200  60 Hz  hdmi_mode=70   1920x1200  75 Hz  hdmi_mode=71   1920x1200  85 Hz  hdmi_mode=72   1920x1200 120 Hz  Reduced blankinghdmi_mode=73   1920x1440  60 Hz  hdmi_mode=74   1920x1440  75 Hz  hdmi_mode=75   1920x1440 120 Hz  Reduced blankinghdmi_mode=76   2560x1600         Reduced blankinghdmi_mode=77   2560x1600  60 Hz  hdmi_mode=78   2560x1600  75 Hz  hdmi_mode=79   2560x1600  85 Hz  hdmi_mode=80   2560x1600 120 Hz  Reduced blankinghdmi_mode=81   1366x768   60 Hz  hdmi_mode=82   1080p      60 Hz  hdmi_mode=83   1600x900          Reduced blankinghdmi_mode=84   2048x1152         Reduced blankinghdmi_mode=85   720p       60 Hz  hdmi_mode=86   1366x768          Reduced blanking      Lưu lại chỉnh sửa bằng các nhấn Ctrl + x y  [enter]        Khởi động lại RasPi để các thay đổi có hiệu lực:  sudo rebootThêm: Ngoài ra, bạn có thể tìm thêm các thiết lập khác cho màn hình, cũng như thiết lập cho các thành phần khác của Raspberry Pi như bộ nhớ, camera, mạng và ép xung tại link: http://elinux.org/RPiconfig.Liên kết:      http://elinux.org/R-Pi_configuration_file        http://elinux.org/RPiconfig  ",
      "url": " https://vietanhdev.com/articles/thay-doi-do-phan-giai-man-hinh-raspi/",
      "categories": "article"
    }
    ,
  

    "articles-xay-dung-website-voi-jekyll-lv2": {
      "title": "Kinh nghiệm tạo website cá nhân với Jekyll (tiếp)",
      "content"	 : "Hình ảnh Website VietAnhDev.com sau khi chuyển sang JekyllLevel 2!Trước đây vài ngày tôi có viết bài Kinh nghiệm tạo website cá nhân với Jekyll (level 1), nói về những kinh nghiệm đầu tiên để setup một trang Jekyll. Bài này là phần tiếp theo, về:  Sử dụng tên miền riêng  Tạo trang Categories, Tags  Tạo trang tìm kiếm  Tạo SitemapSử dụng tên miền riêng cho WebsiteBạn muốn sử dụng một tên miền đã đăng kí được cho website của mình, ví dụ: vietanhdev.com, blog.vietanhdev.com, tenban.net, trước hết chúng ta cần thay đổi bản ghi DNS của tên miền để trỏ tới hosting của Github Pages. Bạn hãy thêm bản ghi A (A record) tại phần thiết lập DNS của tên miền trỏ tới 192.30.252.153 và 192.30.252.154. Ở đây tôi sử dụng dịch vụ DNS của Cloudflare.Tiếp theo chúng ta thêm một file tên CNAME có nội dung là tên miền bạn đã trỏ tới Github. Ví dụ file CNAME của tôi:vietanhdev.comBạn có thể tạo file mới trên Github bằng cách truy cập vào địa chỉ chứa mã nguồn website của bạn dạng: https://github.com/&amp;lt;tên đăng nhập Github&amp;gt;/&amp;lt;tên đăng nhập Github&amp;gt;.github.io và Chọn Create new file.Việc cuối cùng chúng ta cần làm là mở file _config.yml và chỉnh sửa một số thiết lập url (và có thể là baseurl) (đường dẫn đến website của bạn). Tìm đến đoạn có nội dung tương tự thế này và chỉnh sửa lại cho phù hợp với tên miền mới.url: &quot;http://example.github.io&quot;baseurl: &quot;&quot;Sau khi hoàn thành tất cả các thiết lập, hãy kiểm tra xem Website của bạn hoạt động tốt với địa chỉ mới chưa.Thêm trang Categories (danh mục) và Tags (thẻ) cho Website của bạnĐối với các bạn viết blog thì một trang Categories hay thống kê Tags rất quan trọng để các bài viết của bạn có thể được dễ dàng tìm thấy trong các mục phân loại.Để thêm các phân loại hay gắn thẻ cho các bài viết của bạn, hãy sử dụng đoạn mã như sau đầu mỗi bài viết:---categories: [danh mục 1, danh mục 2]tags: [tag 1, tag 2, tag 3]---Tiếp đó là tạo trang Categories thôi: Tạo file categories.html tại thư mục gốc của mã nguồn, và copy nội dung sau đây vào:---layout: pagetitle: Categories---&amp;lt;div class=&quot;tags-expo&quot;&amp;gt;  &amp;lt;div class=&quot;tags-expo-list&quot;&amp;gt;    {% for tag in site.categories %}    &amp;lt;a href=&quot;#{{ tag[0] | slugify }}&quot; class=&quot;post-tag&quot;&amp;gt;{{ tag[0] }}&amp;lt;/a&amp;gt;    {% endfor %}  &amp;lt;/div&amp;gt;  &amp;lt;hr/&amp;gt;  &amp;lt;div class=&quot;tags-expo-section&quot;&amp;gt;    {% for tag in site.categories %}    &amp;lt;h2 id=&quot;{{ tag[0] | slugify }}&quot;&amp;gt;{{ tag[0] }}&amp;lt;/h2&amp;gt;    &amp;lt;ul class=&quot;tags-expo-posts&quot;&amp;gt;      {% for post in tag[1] %}        &amp;lt;a class=&quot;post-title&quot; href=&quot;{{ site.baseurl }}{{ post.url }}&quot;&amp;gt;      &amp;lt;li&amp;gt;        {{ post.title }} &amp;lt;br/&amp;gt;      &amp;lt;small class=&quot;post-date&quot;&amp;gt;{{ post.date | date_to_string }}&amp;lt;/small&amp;gt;      &amp;lt;/li&amp;gt;      &amp;lt;/a&amp;gt;      {% endfor %}    &amp;lt;/ul&amp;gt;    {% endfor %}  &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;Tạo trang Tags : Thêm file tags.html có nội dung như sau:---layout: pagetitle: Tagssubtitle: Browse this website by tag.---# TagsClick on each line to get to the relevant archive section.&amp;lt;div class=&#39;list-group&#39;&amp;gt;  {% assign tags_list = site.tags %}  {% if tags_list.first[0] == null %}    {% for tag in tags_list %}      &amp;lt;a href=&quot;/tags#{{ tag }}-ref&quot; class=&#39;list-group-item&#39;&amp;gt;        {{ tag }} &amp;lt;span class=&#39;badge&#39;&amp;gt;{{ site.tags[tag].size }}&amp;lt;/span&amp;gt;      &amp;lt;/a&amp;gt;    {% endfor %}  {% else %}    {% for tag in tags_list %}      &amp;lt;a href=&quot;/tags#{{ tag[0] }}-ref&quot; class=&#39;list-group-item&#39;&amp;gt;        {{ tag[0] }} &amp;lt;span class=&#39;badge&#39;&amp;gt;{{ tag[1].size }}&amp;lt;/span&amp;gt;      &amp;lt;/a&amp;gt;    {% endfor %}  {% endif %}  {% assign tags_list = nil %}&amp;lt;/div&amp;gt;&amp;lt;hr&amp;gt;# Table of contentClick on each post title to view it.{% for tag in site.tags %}  &amp;lt;h2 class=&#39;tag-header&#39; id=&quot;{{ tag[0] }}-ref&quot;&amp;gt;{{ tag[0] }}&amp;lt;/h2&amp;gt;  &amp;lt;ul&amp;gt;    {% assign pages_list = tag[1] %}    {% for node in pages_list %}      {% if node.title != null %}        {% if group == null or group == node.group %}          {% if page.url == node.url %}          &amp;lt;li class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;{{node.url}}&quot; class=&quot;active&quot;&amp;gt;{{node.title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;          {% else %}          &amp;lt;li&amp;gt;&amp;lt;a href=&quot;{{node.url}}&quot;&amp;gt;{{node.title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;          {% endif %}        {% endif %}      {% endif %}    {% endfor %}    {% assign pages_list = nil %}    {% assign group = nil %}  &amp;lt;/ul&amp;gt;{% endfor %}Sau khi tạo các trang Categories và Tags, bạn có thể truy cập chúng tại địa chỉ &amp;lt;website url&amp;gt;/categories/ (vd https://vietanhdev.com/categories/ ) và (vd &amp;lt;website url&amp;gt;/tags/ https://vietanhdev.com/tags/ ).Một số ảnh chụp màn hình trang Categories và Tags của tôi:Thêm trang tìm kiếmNhư các bạn đã biết, Jekyll sẽ giúp chúng ta tạo ra các trang web tĩnh. Điều này có nghĩa là sẽ không có các xử lí phía server như php, java, ASP,… Do vậy việc tìm kiếm tại trang web của chúng ta sẽ phải sử dụng tới công cụ của Google: Custom Search Engine.Truy cập https://cse.google.com/cse/  và nhấp Create a custom search engine nhé. Bạn sẽ được chuyển tới trang tạo mới công cụ tìm kiếm: https://cse.google.com/cse/create/new. Tại đây, hãy nhập đầy đủ các thông tin cho công cụ tìm kiếm của bạn.Sau khi tạo xong Google Custom Search, nhấp Get the code để lấy mã.Tạo file search.md trong thư mục gốc website với nội dung tương tự như sau (thay nội dung nằm trong cặp thẻ &amp;lt;div id=&quot;search-box&quot;&amp;gt; đến &amp;lt;/div&amp;gt; bằng mã bạn copy được ở trang Google Custom Search vừa rồi). Vậy là bạn đã xây dựng thành công công cụ tìm kiếm cho website của mình rồi. Bạn có thể bắt đầu sử dụng tại &amp;lt;website url&amp;gt;/search/ (vd https://vietanhdev.com/search/).---layout: pagetitle: &quot;Search&quot;subtitle: Feeling lost? Look for things in my blog.---&amp;lt;div id=&quot;search-box&quot;&amp;gt;&amp;lt;script&amp;gt;  (function() {    var cx = &#39;017506748519218477146:5fskv8iekvu&#39;;    var gcse = document.createElement(&#39;script&#39;);    gcse.type = &#39;text/javascript&#39;;    gcse.async = true;    gcse.src = &#39;https://cse.google.com/cse.js?cx=&#39; + cx;    var s = document.getElementsByTagName(&#39;script&#39;)[0];    s.parentNode.insertBefore(gcse, s);  })();&amp;lt;/script&amp;gt;&amp;lt;gcse:search&amp;gt;&amp;lt;/gcse:search&amp;gt;&amp;lt;/div&amp;gt;Tạo SitemapViệc có một Sitemap và submit lên Google sẽ giúp Google index trang của bạn nhanh hơn. Tạo file  Sitemap.xml với nội dung như sau:---layout: nullsitemap:  exclude: &#39;yes&#39;---&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&amp;lt;urlset xmlns=&quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot;&amp;gt;  {% for post in site.posts %}    {% unless post.published == false %}    &amp;lt;url&amp;gt;      &amp;lt;loc&amp;gt;{{ site.url }}{{ post.url }}&amp;lt;/loc&amp;gt;      {% if post.sitemap.lastmod %}        &amp;lt;lastmod&amp;gt;{{ post.sitemap.lastmod | date: &quot;%Y-%m-%d&quot; }}&amp;lt;/lastmod&amp;gt;      {% elsif post.date %}        &amp;lt;lastmod&amp;gt;{{ post.date | date_to_xmlschema }}&amp;lt;/lastmod&amp;gt;      {% else %}        &amp;lt;lastmod&amp;gt;{{ site.time | date_to_xmlschema }}&amp;lt;/lastmod&amp;gt;      {% endif %}      {% if post.sitemap.changefreq %}        &amp;lt;changefreq&amp;gt;{{ post.sitemap.changefreq }}&amp;lt;/changefreq&amp;gt;      {% else %}        &amp;lt;changefreq&amp;gt;monthly&amp;lt;/changefreq&amp;gt;      {% endif %}      {% if post.sitemap.priority %}        &amp;lt;priority&amp;gt;{{ post.sitemap.priority }}&amp;lt;/priority&amp;gt;      {% else %}        &amp;lt;priority&amp;gt;0.5&amp;lt;/priority&amp;gt;      {% endif %}    &amp;lt;/url&amp;gt;    {% endunless %}  {% endfor %}  {% for page in site.pages %}    {% unless page.sitemap.exclude == &quot;yes&quot; %}    &amp;lt;url&amp;gt;      &amp;lt;loc&amp;gt;{{ site.url }}{{ page.url | remove: &quot;index.html&quot; }}&amp;lt;/loc&amp;gt;      {% if page.sitemap.lastmod %}        &amp;lt;lastmod&amp;gt;{{ page.sitemap.lastmod | date: &quot;%Y-%m-%d&quot; }}&amp;lt;/lastmod&amp;gt;      {% elsif page.date %}        &amp;lt;lastmod&amp;gt;{{ page.date | date_to_xmlschema }}&amp;lt;/lastmod&amp;gt;      {% else %}        &amp;lt;lastmod&amp;gt;{{ site.time | date_to_xmlschema }}&amp;lt;/lastmod&amp;gt;      {% endif %}      {% if page.sitemap.changefreq %}        &amp;lt;changefreq&amp;gt;{{ page.sitemap.changefreq }}&amp;lt;/changefreq&amp;gt;      {% else %}        &amp;lt;changefreq&amp;gt;monthly&amp;lt;/changefreq&amp;gt;      {% endif %}      {% if page.sitemap.priority %}        &amp;lt;priority&amp;gt;{{ page.sitemap.priority }}&amp;lt;/priority&amp;gt;      {% else %}        &amp;lt;priority&amp;gt;0.3&amp;lt;/priority&amp;gt;      {% endif %}    &amp;lt;/url&amp;gt;    {% endunless %}  {% endfor %}&amp;lt;/urlset&amp;gt;Sitemap này sẽ được truy cập qua địa chỉ &amp;lt;website url&amp;gt;/Sitemap.xml (vd https://vietanhdev.com/Sitemap.xml).Trên đây là một số kinh nghiệm sử dụng Jekyll nâng cao (Level 2). Chúc các bạn tạo được trang web bằng Jekyll ưng ý nhất!",
      "url": " https://vietanhdev.com/articles/xay-dung-website-voi-jekyll-lv2/",
      "categories": "article"
    }
    ,
  

    "articles-xay-dung-website-voi-jekyll": {
      "title": "Kinh nghiệm tạo website cá nhân với Jekyll",
      "content"	 : "Hình ảnh Website VietAnhDev.com sau khi chuyển sang JekyllChú ý: Bài viết này tôi muốn hướng đến các bạn đã có chút kinh nghiệm về web. Công nghệ Jekyll mà tôi muốn chia sẻ là công nghệ khá tuyệt vời để tạo các website cá nhân, tuy nhiên việc cấu hình và sử dụng hơi phức tạp chút.Vào đềTrước đây vài ngày, tôi có chuyển hẳn website từ CMS Wordpress sử dụng Namecheap hosting sang Jekyll sử dụng Github Pages lưu trữ website trực tiếp trên Github. Lúc đầu thì việc sử dụng Jekyll thật khó khăn và có những lúc làm tôi thấy hơn nản (quen việc dùng WordPress quá dễ dàng rồi), nhưng sau vài ngày sử dụng Jekyll tôi lại thấy điều ngược lại: Thật quá dễ dàng và thoải mái!! Chính vì vậy tôi muốn viết bài này chia sẻ cho mọi người.Trước hết, một số định nghĩa cho bạn nào chưa biết:  CMS WordPress là một trong những hệ quản trị nội dung phổ biến nhất giúp bạn có thể dễ dàng tạo các website của mình với hàng loạt các tùy biến về giao diện, tối ưu cho SEO. Bạn có thể làm rất nhiều việc với WordPress từ viết blog, làm website bán hàng, forum…vv. Rất nhiều website lớn nhỏ khác nhau đang sử dụng WordPress. CMS này được viết trên ngôn ngữ PHP và website nó tạo ra là các web động với nhiều tương tác người dùng nhé.  Jekyll lại là một thứ hoàn toàn khác. Nó là một phần mềm được viết trên Ruby giúp tạo ra các website tĩnh. Nó không có nhiều khả năng như WordPress, hơi khó sử dụng với người mới nhưng với việc tạo các website cá nhân, blog, trang tài liệu thì khả năng sinh web tĩnh cho phép nó đạt hiệu suất vượt trội. Bạn có thể tùy biến đủ kiểu với website của mình và lưu trữ nó trên chính Github - dịch vụ lưu trữ mã nguồn một cách hoàn toàn miễn phí. Một ưu điểm nữa là web tĩnh sẽ cho phép website của bạn miễn nhiễm với các mã độc, sự tấn công của hacker chúng ta thường thấy trên các CMS như WordPress.Tại sao sử dụng Github Pages để lưu trữ website cá nhânGithub là dịch vụ lưu trữ mà nguồn quen thuộc với các bạn lập trình viên. Github cũng cung cấp dịch vụ Github Pages cho phép bạn lưu trữ các website của dự án, website cá nhân và tổ chức trên chính Github. Ưu điểm của việc sử dụng Github lưu trữ website cá nhân là:      Nó hoàn toàn miễn phí. Nó đã giúp tôi tiết kiệm được hơn 1 triệu đồng (tôi phải sử dụng để thuê hosting WordPress bên Namecheap mỗi năm). Bạn có thể sử dụng tên miền miễn phí dạng .github.io, tuy nhiên cũng có thể dùng luôn các tên miền bạn sở hữu như vietanhdev.com :D        Hỗ trợ Jekyll.  Jekyll là phần mềm tạo các website tĩnh từ các file Markdown hoặc html. Thông thường bạn cần biên dịch tất cả các file sang mã html trước rồi mới upload lên các máy chủ lưu trữ. Nhưng với Github, điều đó là không cần thiết. Bạn có thể chỉnh sửa các bài viết, các trang của website sử dụng Jekyll và commit lên Github, vậy là xong.        Khá quen thuộc với các lập trình viên. Nếu bạn là một lập trình viên thì việc commit code lên Github là một việc khá quen thuộc rồi. Làm website, viết blog theo cách đó chắc chắn sẽ làm bạn thấy thoải mái.  OK. Tiến hành làm website bằng Jekyll nào.1.Level cơ bản  Level cơ bản sử dụng Github Pages để lưu trữ website và theme Beautiful Jekyll để tạo website cá nhân với Jekyll.Trước tiên chúng ta hãy tìm một theme (giao diện) cơ bản để bắt đầu với Website nhé. Có rất nhiều theme tôi thấy rất ok tại jekyllthemes.org hoặc themes.jekyllrc.org. Tuy nhiên với Level cơ bản sử dụng Github Pages, chúng ta sẽ bắt đầu với một theme đơn giản, nhưng cá nhân tôi thấy là rất tốt để tạo một website cá nhân : Beautiful Jekyll của Dean Attali.Fun fact: Website hiện tại của Việt Anh sử dụng theme này.      Để sử dụng theme này với Github Pages, trước tiên bạn cần đăng kí một tài khoản Github. Github thì khá quen thuộc với lập trình viên rồi. Bạn nên lập luôn một cái để sử dụng cho nhiều mục đích khác sau này. Lưu ý là Username Github của bạn sẽ quyết định địa chỉ website cá nhân được lưu trữ trên Github. Ví dụ Username của Việt Anh là vietanhdev.com thì tên miền mặc định cho website được Github cấp là vietanhdev.github.io.        Tiếp theo bạn nên làm quen với ngôn ngữ sử dụng chủ yếu để viết nội dung cho Jekyll Website là Markdown. Ngôn ngữ này cũng được sử dụng khá phổ biến trong Github để viết các file README.Md - giới thiệu chung cho mỗi dự án nguồn mở trên Github. Bạn có thể học Markdown tại www.markdowntutorial.com (tiếng Anh) hoặc Hướng dẫn sử dụng Markdown tại đây.  Bắt đầu với theme Beautiful Jekyll nào.Mang Beautiful Jekyll về làm trang web của bạn      Đăng nhập Github.        Truy cập trang mã nguồn Beautiful Jekyll trên Github: https://github.com/daattali/beautiful-jekyll.        Fork (tạo một bản sao) mã nguồn Beautifull Jekyll về tài khoản Github của mình bằng cách ấn nút Fork ở góc trên bên phải của trang mã nguồn.        Đổi tên repository vừa Fork thành dạng &amp;lt;username&amp;gt;.github.io , trong đó &amp;lt;username&amp;gt; là tên đăng nhập Github của bạn.        Chỉnh sửa file _config.yml để tạo các thiết lập ban đầu cho website của bạn. Mở file đó lên thì các dòng có # ở đầu là các dòng comment hướng dẫn bạn chỉnh sửa file cấu hình đó. Sau khi sửa xong các file ở Github, bạn ấn Commit changes để lưu lại thay đổi. Đối với website chạy bằng Jekyll thì mỗi lần bạn sửa một file nào đấy là Github sẽ tự động dịch lại toàn bộ mã nguồn website của bạn sang định dạng khả dụng cho một trang web.        Sau khi bạn chỉnh sửa xong thiết lập về đường dẫn (phần url trong file _config.yml), hãy truy cập .github.io để xem trang web của bạn đã tạo thành công chưa.  Mô tả các bước của tôi khá tổng quát, có thể các bạn chưa hình dung được. Và thêm nữa, trăm nghe không bằng một thấy, trăm đọc không bằng xem thực hành. Tôi xin phép được trích hình ảnh hướng dẫn cài theme Beautiful Jekyll của tác giả Dean Attali để các bạn hình dung được:Kinh nghiệm : Nếu website của bạn build bị lỗi ở chỗ nào đó thì Github sẽ gửi thông báo về email của bạn. Hãy mở nó lên và kiểm tra xem có vấn đề gì xảy ra nhé. Nếu lỗi nằm ở file cấu hình _config.yml (được viết bằng ngôn ngữ YAML) thì bạn hãy sử dụng công cụ tại http://codebeautify.org/yaml-validator - Copy toàn bộ nội dung file _config.yml vào đó và kiểm tra lỗi nhé.Cấu trúc thư mục JekyllBạn vào trang Github chứa mã nguồn Beautiful Jekyll mình vừa Fork về sẽ thấy một loạt thư mục, tập tin với chức năng khác nhau bạn cần nắm để từng bước làm chủ website của mình.  Một số file ở thư mục gốc cần chú ý:          _config.yml : File cấu hình của Jekyll. Bạn cần quẩy file này tưng bừng lên để nắm được cách tùy chỉnh trang Jekyll của mình.      index.html : Đây là mã nguồn của trang chủ. Bên trong ngoài mã HTML còn có YAML, Liquid templating.      aboutme.md : trang giới thiệu về bản thân bạn trên website. Tôi nghĩ bạn nên bắt đầu chỉnh sửa file này trước.        Các thư mục cần chú ý cho người mới:          _posts : chứa các bài viết trên trang của bạn.      _layouts : các cấu trúc trang sửa dụng trong các trang, các bài viết trên blog của bạn.      css, js : chứa các tập tin css, js tùy biến giao diện và làm website của bạn trở nên sinh động hơn.      Cách viết một bài viết (xây dựng một trang) trong JekyllBạn có thể tạo trang, viết blog bằng Markdown, HTML, các mã Liquid templating, tuy nhiên có vài điểm cần lưu ý về cấu trúc:  Tên bài viết nên đặt theo kiểu yyyy-mm-dd-ten-bai-viet.md. ví dụ : 2016-09-13-xay-dung-website-voi-jekyll.md.  Đầu mỗi file bài viết (trang) sẽ có các mã YAML chứa thông tin bài viết (trang) đó. Mã này được viết giữa hai dòng chứa ba gạch nối (-).---&amp;lt;mã YAML&amp;gt;---Ví dụ mã YAML của bài viết này:---layout: posttitle:  &quot;Kinh nghiệm tạo website cá nhân với Jekyll&quot;subtitle: &quot;Một số kinh nghiệm tôi thu được sau khi chuyển website cá nhân từ Wordpress sang Jekyll&quot;date:   2016-09-16categories: [Jekyll]tags: [Jekyll, website]bigimg: &quot;/assets/images/blogging/jekyll/jekyllhomepage.png&quot;---Một số mã YAML mà theme Beautiful Jekyll hỗ trợ:            Parameter      Mô tả                  title      Tiêu đề trang / bài viết              subtitle      Tiêu đề phụ (hiện dưới tiêu đề chính)              bigimg      Nhúng ảnh to đầu trang / bài viết. Bạn có thể đưa link một ảnh hoặc một danh sách              comments      Để thêm chức năng comment (sử dụng disqus) bạn có thể dùng comments: true              show-avatar      Ẩn/Hiện hình avartar trong trang / bài viết bất kì              share-img      Cung cấp link tới ảnh bạn muốn hiện khi bài viết được share trên Facebook, Twitter.              social-share      Bật/Tắt hàng nút share của các bài viết              layout      Cấu trúc trang. Bạn có thể sử dụng page cho trang, post cho bài viết.              js      Danh sách các file js local (trong cùng repository Github) (vd. /js/mypage.js)              ext-js      Danh sách các file js nhúng từ ngoài (vd. //cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.2/underscore-min.js)              css      Danh sách các file css local (trong cùng repository Github)              ex-css      Danh sách các file css nhúng từ ngoài              googlefonts      Danh sách Google Fonts được sử dụng (vd. [“Monoton”, “Lobster”])      Sau khi Fork cái theme Beautiful Jekyll về, cấu hình một chút. Hãy sửa nội dung các file index.html, aboutme.md, bạn có thể xóa hết các file trong thư mục _posts và bắt đầu viết bài. Tuy nhiên với người mới tôi nghĩ là các bạn nên đọc qua phần YAML của mỗi bài viết có sẵn trong _posts để hiểu cách viết và copy sang chỗ nào đó nếu bạn muốn tận dụng làm luôn cấu trúc YAML cho các bài viết tiếp theo.Trên đây là hướng dẫn hết sức cơ bản về việc sử dụng Jekyll và theme Beautiful Jekyll để tạo website. Việt Anh còn khá nhiều thủ thuật và kinh nghiệm muốn chia sẻ. Hẹn gặp lại các bạn trong Level 2 - Level nâng cao nhé.Trước khi kết thúc Level 1, tôi muốn chia sẻ một vài link để các bạn có thể tìm hiểu thêm về Jekyll:  Trang chủ Jekyll: https://jekyllrb.com/  Github Pages: https://pages.github.com/  Một trang hướng dấn sd Jekyll trên Github bằng tiếng Việt: http://daynhauhoc.com/t/lam-blog-bang-jekyll-su-dung-host-cua-github-level-sieu-co-ban/7030  Blog có khá nhiều bài viết hay về Jekyll: https://blog.webjeda.com/Update 26/09/2016: Hiện tại đã có Level 2 - Kinh nghiệm tạo website cá nhân với Jekyll (tiếp).",
      "url": " https://vietanhdev.com/articles/xay-dung-website-voi-jekyll/",
      "categories": "article"
    }
    ,
  

    "articles-very-simple-guide-to-emacs": {
      "title": "A very simple guide to GNU Emacs",
      "content"	 : "This guide was written in Emacs editor.Introduction to GNU EmacsGNU Emacs is a text editor in GNU project.Why should we use Emacs for code editing?  High perfomancce  Many awesome features for programming:          Jump to any header file.      Autocompletion.      Showing function arguments.      Quickly comment.      And many more features depending on your configuration.      InstallationThis guide uses GNU Emacs running on Ubuntu 16.04.To Install Emacs, you can simply open Terminal and type:sudo apt-get install emacsIf you’re using another operating system, just Google and you can easily find the installation guide for your OS.Using EmacsTo start Emacs, open Terminal and type emacs&amp;amp; to open Emacs GUI or emacs -nw to open Emacs Terminal.Basic shortcuts in EmacsFirstly, in Emacs shortcuts, ‘C’ will stand for Ctrl key and ‘M’ will stand for Meta key (Esc key or Alt key on your keyboard).1.File:            Shortcut      Description                  C-x C-f      Open file              C-x C-s      Save              C-x C-w      Save as              C-x s      Save all              C-x C-v      Revert to file              M-x      Revert Buffer              C-x k      Close Windows/Buffer              C-x C-c      Quit      2.Edit:            Shortcut      Description                  C-_      Undo              C-Space      Begin Selection              C-g      Cancel Seclection              C-w      Cut Seclection              C-k      Cut Line (From current position to the end of the line)              C-y      Paste              C-x r s       Copy Selection to Numbered Clipboard              C-x r i       Paste from Numbered Clipboard              Delete or C-d      Delete              M-Delete      Delete Word Before The Cursor              M-d      Fwd Delete Word      3.Cursor Movement:            Shortcut      Description                  M-f      Word Forward              M-b      Word Backward              C-a / C-e      Jump to beginning / end of line              M-{ /  M-}      Paragraph Forward / Backward              C-v /  M-v      Page Forward / Backward              M-&amp;lt; /  M-&amp;gt;      Jump to beginning / end of file              M-C-a / M-C-e      C Function Forward / Backward      Above is a very basic guide to GNU Emacs. You can find more documents about Emacs at : GNU Emacs - GNU Projects.",
      "url": " https://vietanhdev.com/articles/very-simple-guide-to-emacs/",
      "categories": "article"
    }
    ,
  

    "articles-cau-hinh-emacs-de-lap-trinh-c": {
      "title": "Cấu hình Emacs để lập trình C",
      "content"	 : "Link hướng dẫn cài đặt và sử dụng các chức năng: http://tuhdo.github.io/c-ide.htmlSau đây là vài thứ cơ bản ko cần đọc cái bên trên cài và dùng luôn đã »Anh em thực hiện cài đặt:Mở Terminal, gõ lệnh:git clone https://github.com/tuhdo/emacs-c-ide-demo.git ~/.emacs.dNếu hiện thông báo đã tồn tại thư mục ` ~/.emacs.d` (thư mục cấu hình của emacs) thì ae gõ lệnh sau để xóa nó (có thể gần nhập pass su); và gõ lại lệnh trên.sudo rm -r ~/.emacs.dVậy là mở Emacs lên sử dụng thôi (Lưu ý là lần đầu mở lại nó phải cài đặt một số thứ nên chịu khó chờ chút. Những lần sau sẽ nhanh hơn) »emacs&amp;amp;Vừa mở lên C-x C-f tạo file mới (file mã nguồn ngôn ngữ C có đuôi .c nhé), ae thấy ngay cái file browser ngon hơn cái mặc định rồi.Khi biên dịch ấn F5 là ok thôi. Nhưng đợi chút. Khi biên dịch ta phải viết cái Makefile – file cấu hình biên dịch và thực thi của dự án. Cái này không phải đồ thừa mà hầu hết các dự án C thực tế đều cần nhé.2. Viết Makefile, biên dịch, chạy:Tạo 1 file có tên ‘Makefile’ cùng thư mục với file mã nguồn. Cái này chứa các lệnh biên dịch và thực thi để ae không phải gõ lại mỗi lúc cần dịch và chạy chương trình nhé.Nội dung Makefile cơ bản nhất cho biên dịch C:build:gcc -o hello hello.crun:./helloThay hết hello thành tên file mã nguồn tương ứng nhé.Nếu ae muốn ấn F5 vừa biên dịch xong chạy luôn chương trình trong cửa sổ emacs như hình dưới thì sử dụng Makefile như sau (thay tên hello &amp;gt; tên file nguồn của bạn):build:gcc -o hello hello.c &amp;amp;&amp;amp; ./hellorun:./helloBonus thêm nội dung chương trình mẫu V.A sử dụng:#include &amp;lt;stdio.h&amp;gt;int main(){printf(&quot;Hello Viet Anh&quot;);}Trên đây là cơ bản cấu hình Emacs cho người mới bắt đầu. Đọc thêm các chức năng khác của bộ cấu hình chúng ta vừa sử dụng tại đây nhé: http://tuhdo.github.io/c-ide.htmlTìm hiểu thêm về Makefile: https://www.cs.swarthmore.edu/~newhall/unixhelp/howto_makefiles.html",
      "url": " https://vietanhdev.com/articles/cau-hinh-emacs-de-lap-trinh-c/",
      "categories": "article"
    }
    ,
  

    "articles-lap-trinh-vien-nen-tao-website-ca-nhan": {
      "title": "Lập trình viên nên tạo website cá nhân",
      "content"	 : "Trong thời đại số mà các công nghệ, mạng xã hội đang ngày càng thể hiện sự ảnh hưởng của chúng, mỗi chúng ta không chỉ tồn tại trong thế giới thực, mà còn trong thế giới online. Sự hiện diện của mỗi người trong thế giới online đang dần trở nên quan trọng, khi mà ở đó, ta không những có thể kết nối với những người quen biết xung quanh mà còn được biết đến bởi gần một nửa dân số thế giới (hơn 3 triệu người trên thế giới đang là công dân của thế giới online – Theo internetlivestats). Việc hiện diện này với mỗi lập trình viên lại càng cần thiết. Nó mở ra những cơ hội rất lớn và mang về nhiều lợi ích. Hôm nay Việt Anh sẽ điểm qua một vài lợi ích khi lập trình viên có website cá nhân.1. Website cá nhân là nơi bạn phát triển thương hiệu cá nhân và tạo sự hiện diện trên internet:Trước hết, nếu bạn chưa biết điều này: có rất nhiều lập trình viên và ngày càng nhiều hơn có một website trên internet về bản thân họ, đối với một số người thì website cá nhân kiêm luôn chức năng blog, một số khác sử dụng như một CV, một trang web giới thiệu bản thân online. Cho phép tôi trích dẫn một số hình ảnh về website của họ:Có một trang web giới thiệu về bản thân Online chắc chắn sẽ là môi trường tốt để thể hiện bản thân, để bạn có thể làm quen, giao lưu với nhiều người hơn nữa. Bạn có thể đăng lên đó các quan điểm cá nhân hay thể hiện những khả năng mà bạn có. Đó chính là sự phát triển thương hiệu cá nhân, hay tạo ra một sự hiện diện trên Internet.Đối với một lập trình viên, phát triển thương hiệu cá nhân online là một cách làm rất tốt để bạn có thể tiếp cận các nhà tuyển dụng. Đồng thời việc đó cũng giúp tạo ra cơ hội để bạn làm quen, giao lưu với các lập trình viên khác. Profile cá nhân trên Facebook, Google+ hay  Twitter chắc chắn không thể tạo ra sự chuyên nghiệp bằng một website cá nhân mang tên bạn (như vietanhdev.com của Việt Anh 😀 :D). Đối với một lập trình viên, có một profile đẹp online lại càng cần thiết. Một ngày nào đó, nhà tuyển dụng có thể ghé qua website của bạn và tìm thấy các kĩ năng họ cần, họ sẽ chủ động liên lạc với bạn. Hoặc trường hợp khác, các lập trình viên cùng chí hướng với bạn ghé qua, bạn có thể tìm được một cơ hội hợp tác, hay ít nhất là một cơ hội giao lưu (có thêm bạn bè luôn luôn là tốt phải không).2. Website cá nhân kèm blog giúp bạn duy trì sự tập trung với mục tiêu:Khi bạn gặp khó khăn trong các dự án, hoặc việc tự học của bản thân, việc chỉ nghĩ tới mục tiêu rất khó để khiến bạn duy trì được niềm đam mê và nhiệt huyết với nó. Nhiều nghiên cứu tâm lý cho thấy chính việc tạo các thói quen hàng ngày mới giúp bạn kiên trì đi từng bước, cho tới khi bạn đạt được mục tiêu của mình. Viết blog định kì về những việc bạn đang làm, những thứ bạn đang theo đuổi sẽ tiếp thêm cho bạn động lực mỗi ngày để bạn tiến dần tới mục tiêu.Khi bạn có suy nghĩ chùn bước trước khó khăn, chính những gì bạn viết trước đó sẽ nhắc nhở, đốc thúc bạn tiến lên. Xác lập việc viết blog một cách định kì cũng giúp bạn ghi lại nhật kí về những nỗ lực hay tiến bộ của bạn, giữ bạn tập trung với những mục tiêu đã xác lập từ trước.Không những thế, việc viết blog trên website của bạn là cách giảm stress hiệu quả sau những giờ làm việc căng thẳng. Từ đó giúp bạn có tinh thần thoải mái hơn cho những giờ làm việc hiệu quả hơn sau đó.3. Phát triển website cá nhân sẽ rèn luyện cho bạn nhiều kĩ năng:Trong quá trình thiết kế website cá nhân, bạn có thể học thêm các kiến thức về web và thiết kế giao diện.Không chỉ có vậy, nếu bạn thực hiện một blog về chuyên ngành của bạn trên site này, bạn sẽ cố gắng tìm hiểu nhiều kiến thức để viết hay hơn, tốt hơn, điều đó giúp rèn luyện khả năng tự học, cũng như khả năng diễn đạt của bạn mỗi ngày. Làm lập trình viên, việc code rất quan trọng, nhưng các kĩ năng về học tập và kĩ năng diễn đạt cũng quan trọng không kém. Sau khi viết blog một thời gian, chắc chắn ai cũng sẽ nhận ra khả năng viết, khả năng diễn đạt của mình được cải thiện đáng kể. Điều đó sẽ giúp ích rất nhiều trong công việc của bạn, khi bạn phải thuyết trình hay làm việc nhóm.OK. Vậy làm thế nào để bắt đầu tạo một Website hiệu quả?Nếu các bạn chưa bao giờ bắt đầu với web, Việt Anh nghĩ bạn nên bắt đầu xây dựng một website trên nền tảng WordPress bằng công cụ WordPress.com.Nếu các bạn muốn có một Website cá nhân chuyên nghiệp hơn thì nên thuê một hosting (dịch vụ lưu trữ trang web) và mua một tên miền (vd: vietanhdev.com). Có thể bạn muốn chọn chúng ở Namecheap.com.Nếu các bạn là một web developer, hoặc muốn những cảm giác mới mẻ với việc tạo trang web từ đầu, với dịch vụ lưu trữ mã nguồn quen thuộc GitHub, bạn sẽ có một máy chủ lưu trữ website tĩnh miễn phí với GitHub Pages. Nếu blog là mong muốn của bạn, hãy thử nền tảng blog tĩnh Jekyll. Tôi đã dùng thử, và cũng thấy khá nhiều phản hồi tích cực về nó.Là một developer? Bạn còn chờ gì nữa mà không bắt đầu một Website/Blog cho mình ngay thôi!",
      "url": " https://vietanhdev.com/articles/lap-trinh-vien-nen-tao-website-ca-nhan/",
      "categories": "article"
    }
    ,
  

    "articles-cau-truc-re-nhanh": {
      "title": "Cấu trúc rẽ nhánh trong C",
      "content"	 : "Cấu trúc rẽ nhánh trong mỗi ngôn ngữ lập trình luôn luôn là một thành phần quan trọng. Đó là thành phần cơ bản tạo nên hầu hết các thuật toán hiện đại. Nếu bạn muốn mô tả một đoạn chương trình kiểu như: Nếu gặp điều kiện C thì thực hiện hành động A, ngược lại, thực hiện hành động B thì bạn chắc chắn cần sử dụng cấu trúc rẽ nhánh.1. Cấu trúc rẽ nhánh dạng if…else (nếu… thì…)* Dạng đơn giản nhất: if (&amp;lt;điều kiện&amp;gt;) &amp;lt;hành động&amp;gt;/* Nếu &amp;lt;điều kiện&amp;gt; đúng thì thực hiện &amp;lt;hành động&amp;gt;&amp;lt;hành động&amp;gt; thông thường là một khối lệnh, được đặt trong cặp dấu { } */Chương trình ví dụ:#include &amp;lt;stdio.h&amp;gt;int main(){int a = 5;if (a &amp;gt; 0) {printf(&quot;%d la so duongn&quot;,a);}if (a &amp;lt; 0) {printf(&quot;%d la so amn&quot;,a);printf(&quot;a nho hon 0&quot;);}return 0;}* Dạng mở rộng if…else:if (&amp;lt;điều kiện&amp;gt;)&amp;lt;hành động 1&amp;gt;else&amp;lt;hành động 2&amp;gt;/* Nếu &amp;lt;điều kiện&amp;gt; đúng thì thực hiện &amp;lt;hành động 1&amp;gt; ; nếu &amp;lt;điều kiện&amp;gt; sai thì thực hiện &amp;lt;hành động 2&amp;gt;*/Chương trình ví dụ:#include &amp;lt;stdio.h&amp;gt;int main() {int a = -5;if (a &amp;gt; 0)printf(&quot;%d &amp;gt; 0n&quot;,a);else {printf(&quot;%d &amp;gt;= 0n&quot;, a);printf(&quot;%d khong la so duongn&quot;,a);}return 0;}* Dạng mở rộng if…else if…else:if (&amp;lt;điều kiện 1&amp;gt;)&amp;lt;hành động 1&amp;gt;else if (&amp;lt;điều kiện 2&amp;gt;)&amp;lt;hành động 2&amp;gt;else&amp;lt;hành động 3&amp;gt;/* Nếu &amp;lt;điều kiện 1&amp;gt; đúng thì thực hiện &amp;lt;hành động 1&amp;gt; ; nếu &amp;lt;điều kiện 1&amp;gt; sai -&amp;gt; tiến hành kiểm tra &amp;lt;điều kiện 2&amp;gt;: &amp;lt;điều kiện 2&amp;gt; đúng sẽ thực hiện &amp;lt;hành động 2&amp;gt;; nếu  &amp;lt;điều kiện 1&amp;gt; và &amp;lt;điều kiện 2&amp;gt; đều sai thì thực hiện &amp;lt;hành động 3&amp;gt; */Chương trình ví dụ:#include &amp;lt;stdio.h&amp;gt;int main() {int a = 5;printf(&quot;Nhap so nguyen a: &quot;);scanf(&quot;%d&quot;,&amp;amp;a);if (a &amp;gt; 0)printf(&quot;a la so duongn&quot;);else if (a &amp;lt; 0)printf(&quot;a la so amn&quot;);elsef(&quot;a = 0&quot;);return 0;}Các bạn chạy đoạn chương trình với các giá trị a khác nhau xem sao nhé.2. Cấu trúc rẽ nhánh switch caseCú pháp:switch (&amp;lt;biểu thức nguyên&amp;gt;) {case &amp;lt;giá trị 1&amp;gt;: &amp;lt;hành động 1&amp;gt;; break; /* có thể không có câu lệnh này*/case &amp;lt;giá trị 2&amp;gt;: &amp;lt;hành động 1&amp;gt;; break; /* có thể không có câu lệnh này*/....default: &amp;lt;hành động mặc định&amp;gt;; break; /* có thể không có câu lệnh này*/}• Khi một cấu trúc rẽ nhánh switch được thực thi, chương trình sẽ tính toán giá trị của biểu thức. Kết quả thu được phải là kiểu nguyên (ta có thể ép kiểu cho nó. Xem Toán tử trong C để biết cách ép kiểu). Tiếp đó nó so sánh kết quả thu được với các giá trị 1,2… , khi tìm thấy một giá trị bằng với kết quả thu được ở trên, nó thực hiện cách lệnh từ sau dấu : tương ứng cho tới cuối cấu trúc switch hoặc tới khi bắt gặp lệnh break; • Trường hợp không tìm thấy giá trị nào bằng với giá trị biểu thức,  được thực hiện.Ví dụ về chương trình in ra cách đọc của một chữ số: (từ 0 -&amp;gt; 9)#include &amp;lt; stdio.h &amp;gt;int main() {int chuSo;printf(&quot;Nhap chu so: &quot;);scanf(&quot;%d&quot;, &amp;amp; chuSo);switch (chuSo) {case 0:printf(&quot;Khong&quot;);break;case 1:printf(&quot;Mot&quot;);break;case 2:printf(&quot;Hai&quot;);break;case 3:printf(&quot;Ba&quot;);break;case 4:printf(&quot;Bon&quot;);break;case 5:printf(&quot;Nam&quot;);break;case 6:printf(&quot;Sau&quot;);break;case 7:printf(&quot;Bay&quot;);break;case 8:printf(&quot;Tam&quot;);break;case 9:printf(&quot;Chin&quot;);break;default:printf(&quot;Khong phai chu so!&quot;);}return 0;}",
      "url": " https://vietanhdev.com/articles/cau-truc-re-nhanh/",
      "categories": "article"
    }
    ,
  

    "articles-tao-email-ten-mien-rieng": {
      "title": "Tạo email tên miền riêng! - Cách khẳng định thương hiệu",
      "content"	 : "–  Email của em là gì?–  Dạ. vietanh…–  A còng gờ meol chấm com hả?– Không ạ. vietanh@vietanhdev.com ạ!Quả thực email đã thay thế hoàn toàn thư tay, trở thành một hình thức thư tín liên lạc phổ biến trên toàn cầu, được hầu hết các doanh nghiệp, tổ chức, cá nhân sử dụng như một hình thức liên lạc nhanh, hiệu quả và chuyên nghiệp.Với sự bùng nổ các dịch vụ chất lượng tuyệt vời từ google, hầu hết các cá nhân đều lựa chọn Gmail như một dịch vụ email nhanh, hiệu quả. Tuy nhiên, việc gắn tên bạn với tên một dịch vụ email như gmail (địa chỉ email của bạn thường là [tên bạn]@gmail.com) thực sự không chuyên nghiệp bằng việc bạn có một email tên miền riêng như vietanh@vietanhdev.com chẳng hạn. Với email tên miền riêng bạn sẽ có:      Một email với định dạng chuyên nghiệp (không còn đuôi của nhà cung cấp email như @gmail.com nữa. Đối với cá nhân, bạn có thể ghi điểm tốt hơn trong mắt nhà tuyển dụng nếu có một địa chỉ email như vậy. Hoặc nếu bạn muốn có một cửa hàng online, bạn muốn xây dựng một thương hiệu cho đội kinh doanh, hay cửa hàng online của bạn, việc có địa chỉ email tên miền riêng lại càng cần thiết.    Hòm thư email không phụ thuộc và nhà cung cấp. Bạn có thể dùng email của bạn với một nhà cung cấp phổ biến như google, microsoft (trước kia dịch vụ này miễn phí, nhưng gần đây bạn phải trả tiền để có nó), hay như một số nhà cung cấp máy chủ email miền phí  Yandex, Zoho mail…  OK. Có vẻ giới thiệu vậy đủ rồi. Hôm nay Việt Anh sẽ hướng dẫn các bạn đăng kí một dịch vụ email tên miền riêng kiểu tencuaban@tencuaban.tk. Trong bài viết này mình sử dụng tên miền miễn phí dạng .tk, dịch vụ email miễn phí Yandex của Nga.Bước 1: Đăng kí tên miền:  Tên miền là chuỗi đằng sau email của bạn (*@tencuaban.tk)**. *Sau khi đăng kí xong tên miền bạn cũng có thể sử dụng nó cho website cá nhân. Ở đây mình hướng dẫn các bạn đăng kí tên miền miễn phí tại dot.tk. Bạn nào muốn có tên miền trả phí .com, .net có thể đăng kí tại các nhà cung cấp khác (Z domain – hiện tại bán .com giá 118k/năm đầu, hay 1&amp;amp;1 domainbán $0.99/năm đầu (yêu cầu có thẻ visa để thanh toán)).Để đăng kí tên miền tencuaban.tk bạn vào link http://www.freenom.com/vi/index.html?lang=vi nhập tên miền bạn muốn để đăng kí. Mình sẽ đăng kí tên miền mailvietanh.tk.Sau khi nhấp Nhận ngay &amp;gt; Thanh toán **bạn được chuyển đến một trang thiết lập đăng kí tên miền. Bạn có thể **Forward this domain và nhập vào đó địa chỉ Facebook của bạn, nhưng để đơn giản hoá việc đăng kí email với Yandex, mình chọn DNS như hình dưới và chọn thời hạn đăng kí 12 tháng nhé.Tiếp theo bạn chọn đăng nhập bằng tài khoản Google hay Facebook có sẵn hoặc dùng email để xác nhận nha.Sau khi được chuyển đến trang Review and checkout, bạn chỉ cần điền đấy đủ thông tin và xác nhận thôi.Bạn nhớ vào email cá nhân để nhấp vào link kích hoạt tài khoản khi đăng kí thành công nhé.Bước 2: Đăng kí dịch vụ lưu trữ email miễn phí tại YandexVào https://passport.yandex.com/registration đăng kí tài khoản trước. Nhớ nhấp Send code và xác nhận số điện thoại nha.Tiếp theo truy cập: https://domain.yandex.com/domains điền tên miền bạn vừa đăng kí (tencuaban.tk). &amp;gt; Nhấp Connect Domain.Bạn nhớ đừng đóng cửa sổ này nha. Chúng ta cần xác nhận domain nữa.Bước 3: Xác nhận domain:Bạn có thể xác nhận như hướng dẫn trên trang vừa rồi của Yandex nếu bạn cấu hình tên miền cho một website khác. Nếu bạn chỉ sử dụng dịch vụ email cho tên miền, mình khuyên bạn nên đổi Nameserver về DNS của Yandex cho dễ dàng hơn.Cách làm như sau:3.1: Thay đổi DNS. (nếu lúc trước bạn chưa đổi DNS về dns1.yandex.net và dns2.yandex.net ở bước 1)Đăng nhập quản lí tên miền tại https://my.freenom.com/clientarea.phpVào mục Domains &amp;gt; My Domains trên Menu.Chọn tên miền bạn vừa đăng kí và &amp;gt; Manage DomainTruy cập thay đổi Name server:Bạn đổi Nameserver 1 thành dns1.yandex.net và Nameserver 2 thành **dns2.yandex.net **như hình dưới nhé.Nhấp Change Nameserver.3.2: Xác nhận:Ở bước này bạn phải chờ DNS của Yandex được cập nhật. Việc cập nhật DNS có thể kéo dài đến 24 giờ (trong trường hợp của mình cũng phải đợi vài tiếng). Vào https://domain.yandex.com/ để xem tên miền của bạn được cập nhật chưa.Hình ảnh khi domain đã cập nhật (delegated):Bước 4: Tạo và sử dụng các hòm thư:Bạn tạo hòm thư và có thể thêm logo trang webmail như hình bên dưới nhé. Với tài khoản free ở Yandex, bạn đã có thể thêm tới 1000 email tên miền riêng và mỗi email được sử dụng tới 10GB lưu trữ dữ liệu cá nhân. Số lượng email đó quá đủ cho một cá nhân, hoặc một doanh nghiệp nhỏ sử dụng rồi.Sau khi thiết lập các hòm thư xong, công việc tiếp theo là đăng nhập và sử dụng thôi.Địa chỉ đăng nhập sau khi đã delegate tên miền tới Yandex như hướng dẫn trên  là http://mail.[tên miền của bạn](ví dụ http://mail.mailvietanh.tk) hoặc https://mail.yandex.com/?pdd_domain=[tên miền của bạn] (ví dụ https://mail.yandex.com/?pdd_domain=mailvietanh.tk).Note: **Nếu bạn tự cấu hình các bản ghi DNS mà không delegate tới Yandex như hướng dẫn thì có thể thêm bản ghi CNAME như sau để có địa chỉ đăng nhập là **http://mail.[tên miền của bạn] hoặc có thể đăng nhập bằng đỉa chỉ https://mail.yandex.com/?pdd_domain=[tên miền của bạn].  Subdomain name: mail  Record type: CNAME  Data: domain.mail.yandex.netNâng cao: Thêm form đăng nhập vào website bằng đoạn mã sau (nhớ thay YourDomain.com bằng tên miền của bạn.&amp;lt;form method=&quot;post&quot; action=&quot;https://passport.yandex.com/for/YourDomain.com?mode=auth&quot;&amp;gt;&amp;lt;div class=&quot;label&quot;&amp;gt;Username:&amp;lt;/div&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;login&quot; value=&quot;&quot; tabindex=&quot;1&quot; /&amp;gt;&amp;lt;div class=&quot;label&quot;&amp;gt;Password:&amp;lt;/div&amp;gt;&amp;lt;input type=&quot;hidden&quot; name=&quot;retpath&quot; value=&quot;http://mail.yandex.com/for/YourDomain.com&quot;&amp;gt;&amp;lt;input type=&quot;password&quot; name=&quot;passwd&quot; value=&quot;&quot; maxlength=&quot;100&quot; tabindex=&quot;2&quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;label for=&quot;a&quot;&amp;gt;&amp;lt;input type=&quot;checkbox&quot; name=&quot;twoweeks&quot; id=&quot;a&quot; value=&quot;yes&quot; tabindex=&quot;4&quot; /&amp;gt;Don&#39;t remember me&amp;lt;/label&amp;gt;&amp;lt;input type=&quot;submit&quot; name=&quot;In&quot; value=&quot;Log in&quot; tabindex=&quot;5&quot; /&amp;gt;&amp;lt;/form&amp;gt;Giao diện webmail:Cấu hình trên Mail Client:**Incoming mail**- mail server address: imap.yandex.com- connection security: SSL- port: 993**Outgoing mail**- mail server address: smtp.yandex.com- connection security: SSL- port: 465Hầu hết các Mail Client đều tự nhận cấu hình này. Trường hợp không tự động bạn có thể nhập cấu hình như trên. Yandex cũng có app Yandex.Mail bạn có thể tải về cho điện thoại, máy tính bảng tại Google Play hay Apple Store.  Lưu ý: Bạn cần gia hạn tên miền 1 năm 1 lần để tránh việc bị mất tên miền và hòm email. Việc gia hạn tên miền tại Freenom là miễn phí. Sẽ có email nhắc nhở gia hạn tên miền khi sắp hết hạn.Vậy là bạn đã hoàn thành việc tạo hòm như với tên miền riêng rồi đó! Hãy cùng trở nên chuyên nghiệp hơn khi đưa cho nhà tuyển dụng hay đối tác của bạn email với tên miền riêng nhé!",
      "url": " https://vietanhdev.com/articles/tao-email-ten-mien-rieng/",
      "categories": "article"
    }
    ,
  

    "articles-toan-tu-trong-c": {
      "title": "Toán tử trong C",
      "content"	 : "Định nghĩa toán tử trong [Wikipedia]:  Trong toán học, một toán tử (tiếng Anh operator, phân biệt với operation - phép toán) là một hàm, thông thường có một vai trò quan trọng trong một lĩnh vực nào đấy. Chẳng hạn trong đại số tuyến tính có “toán tử tuyến tính” (linear operator). Trong giải tích có “toán tử vi phân” (differential operator)… Thông thường, một “toán tử” là một hàm tác động lên các hàm khác; hoặc nó có thể là tổng quát hóa của một hàm, như trong đại số tuyến tính.Các kiểu toán tử trong C:  Toán tử số học  Toán tử quan hệ  Toán tử logic  Toán tử so sánh bit  Toán tử gán  Toán tử hỗn hợpToán tử số học:Giả sử khai báo: int A=5, B=6; float C=1.2;            Toán tử      Miêu tả      Ví dụ                  +      Cộng 2 toán hạng      A + B sẽ cho kết quả là 11              -      Trừ 2 toán hạng      A - B sẽ cho kết quả là -1              *      Nhân 2 toán hạng      A * B sẽ cho kết quả là 30              /      Chia 2 toán hạng      B / A sẽ cho kết quả là 0 (2 toán hạng đều là số nguyên  thì kết quả là phần nguyên của thương) A / C sẽ cho kết quả là 4.166667 (1 trong 2 toán hạng là số thực dấu phẩy động thì thương là số thực dấu phẩy động)              %      Chia lấy phần dư      B % A sẽ cho kết quả là 5      Toán tử so sánh(quan hệ): Trả về giá trị là true (đúng) hoặc false (sai)int A=5, B=6;  &amp;lt; (nhỏ hơn)      A &amp;lt; B -&amp;gt; true  &amp;lt;= (nhỏ hơn hoặc bằng)      A &amp;lt;= B -&amp;gt; true  &amp;gt; (lớn hơn)      A &amp;gt; B -&amp;gt; false  &amp;gt;= (lớn hơn hoặc bằng)      A &amp;gt;= B -&amp;gt; false  == (bằng)      A == B  -&amp;gt; false  != (khác)      A != B -&amp;gt; trueToán tử logic: Trả về giá trị là true (đúng) hoặc false (sai)Trong ngôn ngữ C, 2 trạng thái true(đúng) và false(sai) được biểu diễn bởi các số nguyên int:  Số 0 biểu diễn cho trạng thái false (sai).  Tất cả các số nguyên khác 0 biểu diễn cho trạng thái true (đúng).Các toán tử logic:  &amp;amp;&amp;amp; (and)   trả về true khi cả 2 toán hạng đều đúng. Ngược lại trả về false.          (5&amp;lt;6) &amp;amp;&amp;amp; (7&amp;lt;8)  -&amp;gt;  true      (5&amp;gt;6) &amp;amp;&amp;amp; (7&amp;lt;8)  -&amp;gt;  false      (5&amp;gt;6) &amp;amp;&amp;amp; (7&amp;gt;8)  -&amp;gt;  false        || (or)  trả về true khi ít nhất một trong 2 toán hạng đúng. Ngược lại trả về false.          (5&amp;lt;6) &amp;amp;&amp;amp; (7&amp;lt;8)  -&amp;gt;  true      (5&amp;gt;6) &amp;amp;&amp;amp; (7&amp;lt;8)  -&amp;gt;  true      (5&amp;gt;6) &amp;amp;&amp;amp; (7&amp;gt;8)  -&amp;gt;  false        ! (not) trả về true khi toán hạng (đằng sau dấu ! sai). Ngược lại trả về false.          !(7&amp;gt;8)  -&amp;gt;  true      !(7&amp;lt;8)  -&amp;gt;  false      Toán tử thao tác trên bit:  &amp;amp; (and bit)  | (or bit)  ~ (phủ định)  &amp;gt;&amp;gt; (dịch bit sang phải)  &amp;lt;&amp;lt; (dịch bit sang trái)Toán tử gánSử dụng dấu = cho việc gán giá trị vào biến.Ví dụ:int a,b,c;int main(void){a = 5; // Gán cho a giá trị là 5c = b = a; // Gán cho b và c giá trị bằng giá trị của areturn 0;}Các toán tử gán mở rộng:            Toán tử      Ví dụ      Tương đương với                  +=      C += A      C = C + A              -=      C -= A      C = C - A              *=      C *= A      C = C * A              /=      C /= A      C = C / A              %=      C %= A      C = C % A              &amp;lt;&amp;lt;=      C &amp;lt;&amp;lt;= 2      C = C &amp;lt;&amp;lt; 2              &amp;gt;&amp;gt;=      C &amp;gt;&amp;gt;= 2      C = C &amp;gt;&amp;gt; 2              &amp;amp;=      C &amp;amp;= 2      C = C &amp;amp; 2              ^=      C ^= 2      C = C ^ 2              |=      C |= 2      C = C | 2      Toán tử tăng giảm  ++ là toán tử tăng          ++i tương đương với i = i + 1        -- là toán tử giảm          --i tương đương với i = i - 1        Có 2 cách viết ++i và i++ nhưng ý nghĩa của chúng khác nhau:          ++i thì i được tăng trước sau đó sẽ lấy kết quả để thực hiện biểu thức      i++ thì i được đưa vào thực hiện biểu thức trước sau đó mới tăng i lên.      Một số toán tử khác            Toán tử      Miêu tả      Ví dụ                  sizeof()      Trả lại kích cỡ của một biến      sizeof(a), với a là integer, thì sẽ trả lại kết quả là 4.              &amp;amp;      Trả lại địa chỉ của một biến.      &amp;amp;a sẽ cho địa chỉ thực sự của biến a.              *      Trỏ tới một biến.      *a sẽ trỏ tới biến a.              &amp;lt;điều kiện&amp;gt;? X:Y      Biểu thức điều kiện      Nếu điều kiện đúng ? thì trả về giá trị X : Nếu không thì trả về giá trị Y              &amp;lt;toán hạng 1&amp;gt;,&amp;lt;toán hạng 2&amp;gt;      Ước lượng giá trị toán hạng 1, ước lượng giá trị toán hạng 2 và trả về giá trị toán hạng 2 là giá trị cuối cùng      t = (x=10, x+5) sẽ gán giá trị x &amp;lt;- 10; thực hiện phép tính x + 5 = 10 + 5 = 15 và gán giá trị 15 cho t      Bảng thứ tự ưu tiên thực hiện của toán tử (theo thứ tự giảm dần mức độ ưu tiên):            Loại      Toán tử      Thứ tự ưu tiên                  Postfix      () [] -&amp;gt; . ++ - -      Trái sang phải              Unary      + - ! ~ ++ - - (type) * &amp;amp; sizeof      Phải sang trái              Tính nhân      * / %      Trái sang phải              Tính cộng      + -      Trái sang phải              Dịch chuyển bit      &amp;lt;&amp;lt; &amp;gt;&amp;gt;      Trái sang phải              So sánh không ngang bằng      &amp;lt; &amp;lt;= &amp;gt; &amp;gt;=      Trái sang phải              So sánh ngang bằng      == !=      Trái sang phải              Phép AND bit      &amp;amp;      Trái sang phải              Phép XOR bit      ^      Trái sang phải              Phép OR bit      |      Trái sang phải              Phép AND logic      &amp;amp;&amp;amp;      Trái sang phải              Phép OR logic      ||      Trái sang phải              Điều kiện      ? :      Phải sang trái              Gán      = += -= *= = %= &amp;gt;&amp;gt;= &amp;lt;&amp;lt;= &amp;amp;= ^= |=      Phải sang trái              Dấu phảy      ,      Trái sang phải      Ép kiểu:Đôi khi chúng ta cần chuyển đổi giá trị một biểu thức sang kiểu dữ liệu khác. Ví dụ trong trường hợp ta muốn thực hiện phép toán chia lấy phần dư của 2 số nguyên, nhưng lại được lưu trong 2 biến kiểu float, ta không thể áp dụng trực tiếp toán tử % cho 2 biến đó. Bạn chạy chương trình thế này sẽ báo lỗi:#include &amp;lt;stdio.h&amp;gt;int main(void){int a = 5, c;float b = 6;c = a % (int)b;printf(&quot;%d&quot;, c);return 0;}Vì thế cần ép kiểu theo cú pháp: (&amp;lt;kiểu dữ liệu&amp;gt;) &amp;lt;biểu thức&amp;gt; để lấy giá trị từ biến b, đổi sang số nguyên để thực hiện phép %. Code đúng như sau:#include &amp;lt;stdio.h&amp;gt;int main(void){int a = 5, c;float b = 6;c = a % (int)b;printf(&quot;%d&quot;, c);return 0;}",
      "url": " https://vietanhdev.com/articles/toan-tu-trong-c/",
      "categories": "article"
    }
    ,
  

    "articles-bien-hang-va-nhap-xuat-du-lieu-trong-c": {
      "title": "Biến, hằng và nhập xuất dữ liệu trong C",
      "content"	 : "1. Biến, hằng:  Biến, hằng giống như những chiếc hộp có tên riêng mà chúng ta có thể để dữ liệu vào và mang ra mỗi khi chúng ta cần sử dụng. Biến khác hằng ở chỗ giá trị lưu trữ trong biến có thể thay đổi trong quá trình thực hiện chương trình; còn giá thị của hằng thì được định nghĩa ngay từ đầu chương trình, không thay đổi trong suốt quá trình thực hiện chương trình.Các quy tắc đặt tên biến, hằng:Tên biến, tên hằng:  Chỉ chứa các chữ cái, chữ số và kí tự gạch dưới ( _ ) trong bảng mã ASCII.  Phải bắt đầu bằng một chữ cái hoặc kí tự gạch dưới.  Không được trùng với các từ khóa trong ngôn ngữ C.  Phân biệt hoa thường. C là ngôn ngữ phân biệt hoa thường, do vậy biến aBc và abc là khác nhau trong C.Danh sách các từ khóa trong ngôn ngữ C:            break      enum      register      typedef              case      extern      return      union              char      float      short      unsigned              const      for      signed      void              continue      goto      sizeof      volatile              default      if      static      while              do      int      struct      _Packed              double                           Ví dụ:  Tên đúng: abc, Abc, abc123, _abc  Tên sai: 1abc (tên sai do bắt đầu bằng số), b@c (tên sai do chứa kí tự @ không được phép), case (tên sai do trùng với từ khóa).Khai báo biến:Vị trí khai báo: Biến thường được khai báo ở đầu chương trình, đầu hàm hoặc khối lệnh.Có 2 loại biến theo vị trí khai báo:  Biến toàn cục: biến khai báo ở ngoài các hàm, các khối lệnh. Chu trình sống của chúng từ lúc bắt đầu chương trình tới khi kết thúc chương trình.  Biến cục bộ: biến khai báo bên trong các hàm, các khối lệnh. Chu trình sống từ khi bắt đầu khối lệnh tới khi khối lệnh được thực hiện xong.Cú pháp khai báo biến: &amp;lt;kiểu dữ liệu&amp;gt; &amp;lt;danh sách biến&amp;gt;;(Biến trong ngôn ngữ C luôn gắn liền với một kiểu dữ liệu).Ví dụ:int i,j; /* Khai báo biến i,j kiểu số nguyên */char ch; /* Khai báo biến ch kiểu chữ cái ASCII */char name[100]; /* Khai báo xâu kí tự tên name với độ dài lớn nhất là 100 kí tự */i = j = 0; /* Gán giá trị 0 cho 2 biến i,j */ch = &#39;A&#39;; /* Gán giá trị chữ cái A in hoa cho biến ch */Khai báo hằng:Khai báo hằng thực hiện ở đầu chương trình.Cách 1: Sử dụng bộ tiền xử lí:#define &amp;lt;tên hằng&amp;gt; &amp;lt;giá trị của hằng&amp;gt;;Cách 2:const &amp;lt;kiểu dữ liệu&amp;gt; &amp;lt;tên hằng&amp;gt; = &amp;lt;giá trị của hằng&amp;gt;;Trên thực tế tên hằng thường được viết in hoa.Phân chia các kiểu giá trị trong ngôn ngữ C:            STT      Kiểu và miêu tả                  1      **Kiểu cơ bản:  **Là các kiểu dữ liệu số học và bao gồm 2 kiểu chính: a) kiểu số nguyên và b) kiểu số thực dấu chấm động.              2      **Kiểu liệt kê:  **Đây là các kiểu số học và được dùng để định nghĩa các biến mà nó có thể được gán trước một số lượng nhất định giá trị số nguyên qua suốt chương trình.              3      **Kiểu void:  **Kiểu định danh *void* là kiểu đặc biệt thể hiện rằng không có giá trị nào.              4      **Kiểu phát triển từ cơ bản:  **Bao gồm các kiểu : a) con trỏ, b) kiểu mảng, c) kiểu cấu trúc, d) kiểu union và e) kiểu function (hàm).      Bảng các kiểu nguyên:            Kiểu      Kích thước biến      Khoảng giá trị                  char      1 byte      -128 tới 127 hoặc 0 tới 255              unsigned char      1 byte      0 tới 255              signed char      1 byte      -128 tới 127              int      2 hoặc 4 bytes      -32,768 tới 32,767 hoặc -2,147,483,648 tới 2,147,483,647              unsigned int      2 hoặc 4 bytes      0 tới 65,535 hoặc 0 tới 4,294,967,295              short      2 bytes      -32,768 tới 32,767              unsigned short      2 bytes      0 tới 65,535              long      4 bytes      -2,147,483,648 tới 2,147,483,647              unsigned long      4 bytes      0 tới 4,294,967,295      Bảng các kiểu số thực dấu phẩy động:            Kiểu      Kích thước biến      Khoảng giá trị      Độ chính xác                  float      4 byte      1.2E-38 tới 3.4E+38      6 vị trí thập phân              double      8 byte      2.3E-308 tới 1.7E+308      15 vị trí thập phân              long double      10 byte      3.4E-4932 tới 1.1E+4932      19 vị trí thập phân      Một số kí tự điều khiển:  n : Xuống dòng  t : Tab ngang (tạo khoảng trắng giống như khi bạn ấn phím Tab trên bàn phím trong soạn thảo văn bản)  r : Nhảy về đầu hàng  a : Kêu Bip   : In ra dấu   ” : In ra dấu “  ’ : In ra dấu ‘  %% : In ra dấu %2. Nhập xuất dữ liệu trong C:Để nhập xuất cơ bản trong C, ta sử dụng 2 hàm tiêu chuẩn, được định nghĩa trong thư viện &amp;lt;stdio.h&amp;gt;.  Hàm printf() để in ra thiết bị xuất tiêu chuẩn (màn hình).  Hàm scanf() để nhận giá trị từ thiết bị nhập tiêu chuẩn (bàn phím) và lưu vào các biến.Ví dụ về chương trinh nhập một số và in ra số vừa nhập:#include &amp;lt;stdio.h&amp;gt;;int main() {float x;printf(&quot;blog.vietanhdev.comn&quot;);printf(&quot;Nhap vao mot so: &quot;);scanf(&quot;%f&quot;,&amp;amp;x);printf(&quot;So ban vua nhap la: %f&quot;, x);return 0;}a) In dữ liệu ra màn hình:Cú pháp: printf(“xâu kí tự…”, &amp;lt;các biến và các số&amp;gt;);Việc sử dụng đơn giản nhất là in ra một xâu kí tự: “Xin chao cac ban!”:printf(&quot;Xin chao cac ban!&quot;);Vậy bạn muốn in một biến chứa dữ liệu ra màn hinh thì sao?Ví dụ về in biến chứa 1 số nguyên ra màn hình:int number = 12;printf (&quot;So duoc in ra: %d&quot;,number);Để in giá trị của các biến, số ra màn hình, ta phải sử dụng các đặc tả định dạng bắt đầu với % như trên nhằm đại diện cho các biến, số (%d đại diện cho biến số nguyên number).  Các đặc tả định dạng này không được in ra màn hình mà được thay thế bởi các biến, các số đằng sau.Một số đặc tả định dạng cơ bản:  %d: số nguyên hệ 10 có dấu  %u: số nguyên hệ 10 không dấu  %x: số nguyên hệ 16  %o: số nguyên hệ bát phân  %s: xâu kí tự  %c: một kí tự đơn  %f: số chấm động cố định  %e: số chấm động (ký hiệu có số mũ)  l : Tiền tố dùng kèm với %d, %x, %o để chỉ số nguyên dài (ví dụ %ld)Chú ý:  Ta có thể sử dụng đặc tả định dạng để in dữ liệu sang kiểu khác:          Ví dụ:      char ch = &quot;A&quot;;printf (&quot;%dn&quot;, ch); /* In ra 65 */printf (&quot;%cn&quot;, ch); /* In ra A */  Để in ra kí tự % ta dùng %%.Định dạng dữ liệu in ra:% [-] [fwidth] [.p] trong đó: • [fwidth] chiều rộng • [-] căn lề trái • [.p] số kí tự được in raVí dụ:            ** Giá trị**      Đặc tả định dạng      Kết quả                  42      %6d      42              42      %-6d      42              ‘z’      %3c      z              2.71828      %10.2f      2.71              “printf”      %10s      printf      b) Nhập dữ liệu từ bàn phím:Cú pháp: scanf (“xâu kí tự…”, &amp;lt;các con trỏ&amp;gt;);Ví dụ ta muốn nhập một số nguyên vào biến a:int a; scanf(&quot;%d&quot;, &amp;amp;a);Lưu ý:ở đây &amp;amp;a là con trỏ trỏ tới biến a.Chú ý khi nhập xâu kí tự chứa dấu cách (space):Trước khi đọc xâu, chúng ta phải làm sạch bộ đệm bàn phím vì có thể quá trình đọc dữ liệu trước còn lưu lại. Trên Windows chúng ta có lệnh fflush(stdin); , tuy nhiên nó đã bộc lộ khá nhiều hạn chế, nhất là không thể dùng trên Linux nên tôi không sử dụng ở đây. Chúng ta sẽ dùng đoạn lệnh sau trước lệnh nhập vào một chuỗi:int c;while ( ( c = getchar() ) != EOF &amp;amp;&amp;amp; c != &#39;n&#39; );Hoặcscanf ( &quot;%*[^n]&quot; );scanf ( &quot;%*c&quot; );Cách 1: Ta dùng lệnh:fgets (name, 100, stdin);với 100 là độ dài lớn nhất của xâu kí tự bạn muốn nhập vào (bạn có thể thay đổi nó) và name là tên biến xâu kí tự. Việc đọc này sẽ lưu vào biến name cả kí tự xuống dòng ở cuối xâu (khi bạn ấn enter để kết thúc nhập xâu là truyền vào bộ đệm kí tự xuống dòng).Cách 2: Ta dùng lệnh:scanf (&quot;%[^n]%*c&quot;, name);với name cũng là tên biến xâu kí tự. Đọc cách này sẽ loại bỏ kí tự xuống dòng ở cuối xâu.",
      "url": " https://vietanhdev.com/articles/bien-hang-va-nhap-xuat-du-lieu-trong-c/",
      "categories": "article"
    }
    ,
  

    "articles-cau-truc-chuong-trinh-c-co-ban": {
      "title": "Cấu trúc chương trình C cơ bản",
      "content"	 : "Các thành phần của một chương trình C cơ bản bao gồm:  Các lệnh tiền xử lí  Các hàm  Các biến  Các lệnh và biểu thức  Các comment (ghi chú về code giúp ích cho công tác bảo trì và nâng cấp)Chúng ta hãy cùng nghiên cứu chương trình Hello World – Chào thế giới trong ngôn ngữ C. Chương trình này có chức năng in dòng chữ “Hello World!” lên màn hình máy tính. Tên thành phần của chương trình đã được tôi comment bên cạnh mỗi dòng code (sử dụng cặp dấu /* */). Bạn cũng có thể sử dụng cặp // để đánh dấu phần sau đó cho tới cuối dòng code là comment.Mã nguồn:#include &amp;lt;stdio.h&amp;gt;/* Đây là lệnh tiền xử lí, thông báo cho trình biên dịch biếtchương trình của chúng ta sử dụng thư viện stdio.h */int main() {  //Hàm main - nơi chương trình C bắt đầu thực thiprintf(&quot;Hello World! n&quot;);  //Câu lệnh in ra dòng chữ Hello World!return 0; //Giá trị trả về của hàm}Các bạn hãy Copy toàn bộ các dòng code trên, paste vào Geany và lưu lại dưới tên hello.c nhé. (file mã nguồn chương trình ngôn ngữ C có đuôi .c ).Tiếp đó chọn menu Build &amp;gt; Build (F9) để biên dịch. Và Build &amp;gt; Excute (F5) để chạy chương trình đã biên dịch nhé.",
      "url": " https://vietanhdev.com/articles/cau-truc-chuong-trinh-c-co-ban/",
      "categories": "article"
    }
    ,
  

    "articles-cai-dat-geany-gcc-bien-dich-c-tren-linux-ubuntu": {
      "title": "Cài đặt Geany – gcc làm môi trường soạn thảo và biên dịch ngôn ngữ C trên Ubuntu",
      "content"	 : "Trong bài viết này Việt Anh sẽ hướng dẫn các bạn cài Geany và gcc  để soạn thảo và biên dịch chương trình viết bằng ngôn ngữ C trên Linux (cụ thể ở đây là hệ điều hành Ubuntu).1.Trước hết bạn phải tải và cài đặt Geany:Mở Terminal (Ctrl + Alt +t) và gõ lần lượt các lệnh sau để cài đặt trình soạn thảo mã nguồn Geany:sudo apt-get updatesudo apt-get install geany2.Tiếp đó cài đặt gcc để biên dịch ngôn ngữ c:Gõ lệnh sau để cài đặt gói build-essential:sudo apt-get install build-essential3.Sử dụng Geany để soạn thảo mã nguồn và biên dịch code C:Tất cả bạn cần làm là ấn F9 để biên dịch chương trình. Và F5 để chạy chương trình nếu biên dịch thành công.",
      "url": " https://vietanhdev.com/articles/cai-dat-geany-gcc-bien-dich-c-tren-linux-ubuntu/",
      "categories": "article"
    }
    ,
  

    "articles-go-tieng-viet-sublime-text3": {
      "title": "Gõ Tiếng Việt trong Sublime Text 3 - Linux Ubuntu với Vn Ime",
      "content"	 : "Sublime Text 3 là code editor tuyệt vời. Tuy nhiên nó hơi có vấn đề trong việc gõ tiếng Việt trên hệ điều hành Linux. Cụ thể ở đây tôi sử dụng bộ gõ ibus-unikey trên Ubuntu.Tôi đã tìm được một package của Sublime Text 3 cho phép gõ tiếng Việt một cách ngon lành – Vn Ime. Sau đây là cách cài đặt.Đầu tiên bạn phải có Sublime Text 3 (dĩ nhiên rồi). Và cài đặt Package Control. (Xem hướng dẫn)Tiếp theo vào menu Preferences &amp;gt; Package Control (Ctrl + Shift +p) &amp;gt; Install Package &amp;gt; Tìm gói có tên Vn Ime và tiến hành cài đặt.Ngay sau đó bạn ấn F2 để bật/tắt bộ gõ Vn Ime và cùng gõ tiếng Việt trên Sublime Text 3 nào. Tuy nhiên mặc định kiểu gõ là VNI. Các bạn muốn chuyển sang kiểu gõ TELEX (như tôi hay dùng) thì mở tập tin cấu hình Preferences.sublime-settings tại Preferences &amp;gt; Settings – User và thêm đoạn bên dưới vào nhé.{ &quot;telex&quot;: true }",
      "url": " https://vietanhdev.com/articles/go-tieng-viet-Sublime-Text3/",
      "categories": "article"
    }
    ,
  

    "articles-thiet-lap-sublime-text-3-de-bien-dich-va-chay-ngon-ngu-c": {
      "title": "Thiết lập Sublime Text 3 để biên dịch và chạy ngôn ngữ C",
      "content"	 : "1. Trước hết bạn phải tải và cài đặt Sublime Text 3:Xem hướng dẫn cài đặt Sublime text 3.2. Tiếp đó cài đặt gcc để biên dịch ngôn ngữ c:Mở Terminal (Ctrl + Alt +t) và gõ lần lượt các lệnh sau để cài đặt gói build-essential:sudo apt-get updatesudo apt-get install build-essential3. Cấu hình Build system cho Sublime Text để biên dịch và chạy C:Mở Sublime Text 3, chọn menu Tools &amp;gt; Build System &amp;gt; New Build System…Chèn đoạn mã sau và lưu lại dưới tên GCC.sublime-build{&quot;shell_cmd&quot; : &quot;gcc $file_name -o ${file_base_name}&quot;,&quot;working_dir&quot; : &quot;$file_path&quot;,&quot;variants&quot;:  [    {      &quot;name&quot;: &quot;Run&quot;,      &quot;shell_cmd&quot;: &quot;gcc $file_name -o ${file_base_name} &amp;amp;amp;&amp;amp;amp; ${file_path}/${file_base_name}&quot;    }  ]}",
      "url": " https://vietanhdev.com/articles/thiet-lap-sublime-text-3-de-bien-dich-va-chay-ngon-ngu-c/",
      "categories": "article"
    }
    ,
  

    "articles-gioi-thieu-serie-hoc-lap-trinh-c": {
      "title": "Giới thiệu serie học lập trình C",
      "content"	 : "Giới thiệu về ngôn ngữ C từ Wikipedia:  Ngôn ngữ lập trình C là một ngôn ngữ mệnh lệnh được phát triển từ đầu thập niên 1970 bởi Dennis Ritchie để dùng trong hệ điều hành UNIX. Từ đó, ngôn ngữ này đã lan rộng ra nhiều hệ điều hành khác và trở thành một những ngôn ngữ phổ dụng nhất. C là ngôn ngữ rất có hiệu quả và được ưa chuộng nhất để viết các phần mềm hệ thống, mặc dù nó cũng được dùng cho việc viết các ứng dụng. Ngoài ra, C cũng thường được dùng làm phương tiện giảng dạy trong khoa học máy tính mặc dù ngôn ngữ này không được thiết kế dành cho người nhập môn.Ngôn ngữ C  đang được giảng dạy rất rộng rãi trong các trường đại học ở Việt Nam hiện nay và là ngôn ngữ được nhiều người lựa chọn như ngôn ngữ đầu tiên họ học. Trong serie này Việt Anh muốn giới thiệu cho các bạn cơ bản về ngôn ngữ lập trình C, cách viết một số chương trình đơn giản bằng ngôn ngữ C.Tôi sẽ sử dụng chương trình Geany trên hệ điều hành Ubuntu làm trình soạn thảo mã nguồn, gcc làm trình biên dịch ngôn ngữ C. Nếu mới làm quen với ngôn ngữ C và đang sử dụng hệ điều hành Windows, bạn có thể sử dụng Dev-C++ làm trình soạn thảo mã nguồn.Chú ý cách học lập trình C trong serie này:  Các bạn tích cực chạy lại các code mẫu ở mỗi ví dụ bằng cách copy, paste vào trình soạn thảo code và biên dịch, chạy chương trình. Điều đó sẽ giúp bạn hiểu rõ ví dụ hơn.  Thực hành thật nhiều. Dĩ nhiên rồi, cách tốt nhất để học lập trình là thực hành. Bạn hãy làm tất cả các bài tập bạn sưu tập được, có thể nghĩ ra thêm các thử thách cho bản thân với các bài toán phức tạp thêm, mở rộng thêm từ các bài tập đó.  Nếu bạn có thắc mắc gì, hãy tập sử dụng Google như một công cụ hỗ trợ đắc lực. Lập trình viên giỏi luôn biết tìm kiếm sự giúp đỡ từ thế giới online mà 😀 . Tôi cũng sẽ luôn sẵn sàng giúp đỡ nếu bạn gặp khó khăn. Hãy vào trang Liên hệ của blog này để tìm tôi nhé.",
      "url": " https://vietanhdev.com/articles/gioi-thieu-serie-hoc-lap-trinh-c/",
      "categories": "article"
    }
    ,
  

    "articles-huong-dan-cai-dat-sublime-text-3": {
      "title": "Hướng dẫn cài đặt Sublime Text 3 cho Ubuntu và Windows",
      "content"	 : "Giới thiệu Sublime Text:Sublime Text là một trình soạn thảo code (editor) đa nền tảng được tin dùng bởi rất nhiều lập trình viên trên toàn thế giới. Nó mặc định hỗ trợ nhiều loại ngôn nhgữ lập trình. Nó khá mạnh mẽ với các chức năng có thể mở rộng qua plugin.Sublime Text là một phần mềm thương mại. Tuy nhiên hiện tại tác giả cho phép dùng thử với số lần không giới hạn (Chỉ thỉnh thoảng có pop-up nhắc nhở chúng ta nên mua phần mềm thôi). Các bạn có thể dùng Sublime Text miễn phí nhưng tôi nghĩ nếu có điều kiện các bạn nên mua để ủng hộ tác giả.Trang chủ: https://www.sublimetext.com/Cài đặt Sublime Text:* Trên WindowsTải Sublime Text 3 từ trang này &amp;gt; https://www.sublimetext.com/3 (Chọn bản dành cho Windows). Các bạn cũng có thể tải bản Portable và copy vào usb để sử dụng mọi lúc, mọi nơi.Việc cài đặt trên Windows thực hiện tương tự việc cài đặt hầu hết các phần mềm khác. * Trên Ubuntu và các Linux dựa trên Ubuntu như Linux Mint, Elementary OS, Pinguy OS, Peppermint…**Tải gói .deb của Ubuntu trên trang https://www.sublimetext.com/3 và thực hiện cài đặt bằng cách mở lên với gdebi hoặc Ubuntu Software Center.Bạn cũng có thể dùng các lệnh sau để cài Sublime Text thông qua ppa:sudo add-apt-repository ppa:webupd8team/sublime-text-3 sudo apt-get update sudo apt-get install sublime-text-installerCài đặt Package Control cho Sublime TextPackage control giúp chúng ta dễ dàng tìm kiếm, cài đặt và cập nhật các chức năng mở rộng cho Sublime text.Truy cập https://packagecontrol.io/installation và copy đoạn mã cài đặt cho Sublime Text 3.Mở Sublime Text 3. Vào View &amp;gt; Show Console sau đó paste đoạn mã cài đặt trên vào, ấn Enter  để tiến hành cài đặt Package Control. Trong quá trình cài đặt có thể bạn sẽ phải khởi động lại Sublime Text.Sau khi cài đặt, các bạn vào Preferences &amp;gt; Package Control để tiến hành quản lí các gói mở rộng.",
      "url": " https://vietanhdev.com/articles/huong-dan-cai-dat-sublime-text-3/",
      "categories": "article"
    }
    ,
  

    "articles-huong-dan-cai-teamviewer-tren-ubuntu": {
      "title": "Hướng dẫn cài Teamviewer trên Ubuntu 16.04, Ubuntu 15.10, Ubuntu 15.04 và Ubuntu 14.04 LTS",
      "content"	 : "Trước hết Teamviewer là gì? Theo định nghĩa trên trang chủ https://www.teamviewer.com thì Teamviewer là:  Phần mềm hỗ trợ từ xa, truy cập từ xa và họp trực tuyến mà cả thế giới tin cậy – 1 tỷ cài đặt và 20+ triệu thiết bị trực tuyến mọi lúc.Bản Teamviewer 11 (phiên bản mới nhất khi mình viết bài này) được đưa ra với một loạt cải tiến, tối ưu (các bạn có thể tìm đọc thêm trên trang chủ). Sau đây mình sẽ hướng dẫn ngắn gọn cách cài đặt Teamviewer trên hệ điều hành Ubuntu và các hệ điều hành dựa trên Ubuntu như Linux Mint, Elementary OS, Pinguy OS, Peppermint…Cách mình hướng dẫn sử dụng dòng lệnh Terminal . Bạn có thể search Terminal trong hộp thoại tìm kiếm chương trình hoặc ấn tổ hợp phím Ctrl + Alt + t để mở Terminal nhé.Của sổ Terminal trên UbuntuGõ lần lượt các đoạn code sau (ấn Enter sau mỗi dòng):Ubuntu 32bitsudo apt-get updatesudo apt-get install gdebiwget http://download.teamviewer.com/download/teamviewer_i386.debsudo gdebi teamviewer_i386.debUbuntu 64bitsudo dpkg --add-architecture i386sudo apt-get updatesudo apt-get install gdebiwget http://download.teamviewer.com/download/teamviewer_i386.debsudo gdebi teamviewer_i386.debSau khi cài đặt bạn có thể khởi động Teamviewer từ Menu các chương trình hoặc qua lệnh teamviewer trong cửa sổ Terminal.teamviewer",
      "url": " https://vietanhdev.com/articles/huong-dan-cai-teamviewer-tren-ubuntu/",
      "categories": "article"
    }
    ,
  

    "articles-sua-loi-card-do-hoa-intel-ubuntu-md": {
      "title": "Sửa lỗi driver đồ hoạ intel cho các máy cài Ubuntu 14.04, Ubuntu 14.10 trở về sau",
      "content"	 : "Gần đâu một người bạn có nhờ tôi fix lỗi màn hình sau khi cài đặt Ubuntu vào máy pc, laptop cũ chạy chip Intel. Vấn đề của cậu ta là sau khi bật máy một thời gian thì màn hình trở thành thế này.Tôi  thấy lỗi này hồi trước tôi cũng gặp phải khi update lên Ubuntu 14.10. Tôi cũng đã thử cài lại Ubuntu 15.10 và 16.04 cho kết quả tương tự. Tất nhiên sau đó tôi đã tìm hiểu và biết được lỗi này gây ra bởi driver card đồ họa intel (driver mới dùng gia tốc SNA thay vì UXA cũ làm tăng đáng kể hiệu suất trên các card đồ họa mới nhưng lại gây một số lỗi trên các card đồ họa cũ).Để giải quyết vấn đề này, ta có thể cấu hình cho driver của intel sử dụng phương thức gia tốc cũ là UXA. Cách làm như sau:- Mở **Terminal** (có thể dùng phím tắt Ctrl + Alt + t):- Bạn có thể lệnh sau để kiểm tra SNA có kích hoạt không:~~~shcat /var/log/Xorg.0.log | grep SNA~~~- Tiếp đó bạn tạo thư mục `/usr/share/X11/xorg.conf.d/` (nếu thư mục chưa tồn tại) và di chuyển vào đó bằng cách gõ:~~~shmkdir /usr/share/X11/xorg.conf.dcd /usr/share/X11/xorg.conf.d~~~- Tạo file có tên 20-intel.conf:~~~shsudo nano 20-intel.conf~~~- Copy nội dung sau vào file đó (ấn Chuột phải chọn Paste vì không dùng được phím tắt Ctrl + V), ấn Ctrl + X, xác nhận Y, và ấn Enter 2 lần để lưu file.~~~Section &quot;Device&quot;Identifier &quot;Intel Graphics&quot;Driver &quot;intel&quot;Option &quot;AccelMethod&quot; &quot;uxa&quot;EndSection~~~- Sau khi thiết lập cấu hình thành công, bạn cần khởi động lại máy tính. Kiểm tra lại xem SNA còn được thiết lập không:~~~shcat /var/log/Xorg.0.log | grep SNA~~~Chúc bạn thành công!",
      "url": " https://vietanhdev.com/articles/sua-loi-card-do-hoa-intel-ubuntu.md/",
      "categories": "article"
    }
    ,
  

    "articles-song-voi-dam-me": {
      "title": "Sống với đam mê hoặc một cuộc đời nhàm chán",
      "content"	 : "Các bạn ạ, đã có rất nhiều bài viết, hội thảo, cuộc nói chuyện của các chuyên gia nổi tiếng xoay quanh chủ đề “sự đam mê“. Bạn đã đọc? Bạn đã nghe? Bạn đã thấy? Vậy bạn đã hiểu được bao nhiêu phần trăm về cái mà người ta gọi là đam mê, và về cách đam mê ảnh hưởng, xây dựng và khiến cuộc sống của mỗi con người trở nên có ý nghĩa? Hôm nay Việt Anh thực sự muốn chia sẻ những hiểu biết, những suy nghĩ của bản thân về sự đam mê tới các bạn.Đã bao giờ bạn thức dậy trong tình trạng mệt mỏi, cảm thấy áp lực khi phải đối mặt với lịch làm việc, học tập dày đặc lặp đi lặp lại mỗi ngày? Đã bao giờ bạn thấy công việc bạn đang làm thực sự nhàm chán, bạn thấy việc học tập, làm việc hiện tại chỉ để cuộc sống của bạn diễn ra suôn sẻ, chứ thực sự bạn không hứng thú? Bạn vừa học vừa mong đồng hồ chạy qua thật nhanh? Bạn làm việc và chỉ mong được nghỉ? Nhưng cuộc sống là vậy, thời gian cứ trôi, và cuộc đời buộc bạn phải hoạt động, phải trôi theo nó, cho dù bạn cảm thấy áp lực hay nhàm chán đến đâu.Thực sự đó là cách nhìn sẽ hủy hoại đi cái ý nghĩa trong cuộc sống của chúng ta. Cuộc đời chúng ta cũng sẽ trôi qua như những ngôi sao băng, không để lại một chút dấu ấn.Vậy đâu là cách chúng ta sống có ý nghĩa?Mỗi cá nhân chúng ta là một cá thể riêng biệt. Bạn hãy nhớ rằng bạn không giống bất kì một ai trên Trái Đất này cả. Bạn được sinh ra một lần, và bạn chỉ có thể sống một cuộc đời mà thôi, một cuộc đời mà chắc chắn sẽ không kéo dài vô tận. Trên tinh thần đó, chúng ta nhận thấy, mình nhất định không thể sống như là một bản copy cuộc đời của những người khác được. Bạn phải được mỗi ngày làm những điều bạn yêu thích, tạo cho bạn cảm hứng. Bạn phải nỗ lực hết mình để làm những công việc mang lại cho ta niềm vui, và khiến cuộc đời của chúng ta trở nên có ý nghĩa, khác biệt so với tất cả mọi người. Ta gọi đó là SỐNG VỚI ĐAM MÊ.I. ĐỊNH NGHĨA ĐAM MÊĐam mê tạo ra ý nghĩa cho cuộc đời của chúng ta, làm cho cuộc đời đáng sống hơn, vậy đam mê là gì?Tôi có thể định nghĩa: Đam mê là khi bạn có cảm hứng, bạn thích, bạn yêu một công việc nào đó, bạn dồn toàn tâm toàn ý, dành thời gian,  công sức, không ngừng nghỉ để theo đuổi một công việc nào đó.Rất nhiều người đồng hoá đam mê với sở thích, với ước mơ, với khát vọng… Bạn hâm mộ Sơn Tùng, bạn thích hát, bạn sẽ có đam mê trở thành ca sĩ? Bạn xem phim Ironman(Người sắt) và thấy các phát minh vĩ đại của anh, bạn lại đam mê trở thành một chuyên gia công nghệ và mong một ngày tạo ra được các phát minh như thế? Bạn chỉ thấy thích, bạn chỉ mong muốn, bạn mơ một ngày bạn có được những thành công như họ? Đó chưa đủ để tạo thành một đam mê, đó chưa đủ để bạn nghĩ cả cuộc đời bạn sẽ gắn liền với nó, để nó trở thành lẽ sống của bạn. Bởi sao ư? Chướng ngại lớn nhất ngăn cản một sở thích, một ước mơ đi tới thành công là bạn chưa hiểu rõ về sở thích, ước mơ của mình, về những khó khăn, trở ngại bạn sẽ gặp phải, bạn chưa bắt đầu làm nó, và bạn không thể dùng nỗ lực, ý chí của bản thân để kiên trì theo đuổi nó đến cùng. Bạn chỉ ngồi đó, ‘thích’, ‘mơ’, tưởng tượng ra những thành công rực rỡ bạn sẽ đạt được nếu bạn theo đuổi sở thích, ước mơ, đó chưa phải là đam mê. Vậy thì sở thích, ước mơ + nỗ lực bền bỉ mới trở thành -&amp;gt; đam mê.Vậy, cái gì sẽ tạo ra cho bạn nỗ lực bền bỉ để biến sở thích, ước mở trở thành đam mê và vĩnh viễn thay đổi cuộc đời bạn theo hướng tốt đẹp hơn?Theo tôi, yếu tố đầu tiên cho bạn một quyết định để nỗ lực bền bỉ đó là sự hiểu biết rõ ràng về cái mình đang theo đuổi. Khi bạn hiểu rõ về sở thích, ước mơ của bản thân, về mục tiêu mình lựa chọn, bạn mới yêu nó, có lí do để nỗ lực bền bỉ theo đuổi nó, trao cho nó thời gian, sức lực, tâm huyết và gắn liền cuộc sống của mình với nó.Yếu tố thứ hai, mang tính quyết định, là sở thích, ước mơ đó phải liên quan đến các sở trường của bạn. Một khi bạn muốn gắn liền cuộc đời mình với một công việc bạn yêu thích, muốn nó trở thành một đam mê của bạn, công việc đó nhất định phải là sở trường của bạn. Tại sao ư? Nỗ lực bền bỉ, ta có thể hình dung nó giống như một động cơ, bạn phải liên tục tiếp nhiên liệu cho nó. Khối nhiên liệu ban đầu, dù nhiều, nó sẽ ít dần và cạn kiệt. Chẳng thể nào đảm bảo động cơ của bạn sẽ ngừng hoạt động tại một thời điểm nào đó không mong muốn nếu không liên tục tiếp nhiên liệu cho nó.  Nỗ lực bền bỉ cũng vậy, bạn yêu thích một công việc nào đó nhưng chẳng thể có khả năng làm tốt được nó, khối quyết tâm lúc đầu sẽ dần dần vơi đi và cạn kiệt. Cuối cùng mọi quyết tâm sẽ dừng lại nếu không được liên tục bồi đắp thêm. Khả năng làm tốt công việc sẽ giúp bạn tiếp thêm ‘nhiên liệu quyết tâm’. Tại sao vậy? Có thể bạn không để ý, mọi người đều có xu hướng làm nhiều hơn những điều bạn làm tốt. Bạn học giỏi toán ư, bạn rất thích học toán, bạn thích cảm giác được mọi người tán dương, công nhận khi bạn giải ra các bài toán những người khác chưa có lời giải hoàn chỉnh. Bạn không thể làm được những bài văn hay? Bạn sẽ rất nhanh chóng chán môn văn và tìm đủ mọi lí do để không học nó. Vậy thì:Bạn làm tốt một công việc -&amp;gt; mọi người công nhận -&amp;gt; bạn được tiếp thêm nhiên liệu quyết tâm -&amp;gt; Bạn tiếp tục làm công việc đóĐó là cách mà nhiên liệu quyết tâm được tiếp cho mỗi người. Nó diễn ra theo một chu trình khép kín.  Sự công nhận của những người xung quanh, sự hài lòng về những gì bạn đã làm từ chính bạn sẽ nâng cao lượng nhiên liệu quyết tâm bạn được tiếp, cho bạn động lực làm những điều tốt hơn, to lớn hơn. Vậy điều cần nhớ ở đây là yếu tố đầu tiên bắt đầu chu trình đó, yếu tố quyết định tạo ra sự nỗ lực bền bỉ là bạn phải làm tốt được công việc bạn chọn. Nói cách khác, đam mê của bạn cần được bắt nguồn từ những sở trường của bạn.II. CÁCH TÌM ĐAM MÊ &amp;amp; THEO ĐUỔI ĐAM MÊSau khi đã có cái nhìn sơ qua về thành phần cấu tạo nên đam mê, chúng ta lại hỏi: Đâu là cách tìm ra niềm đam mê đích thực của cuộc đời mình?Rất nhiều người muốn chấm dứt một cuộc sống theo guồng quay nhàm chán, đi tìm ý nghĩa cuộc sống, đi tìm một niềm đam mê đích thực của cuộc đời. Sau đây tôi xin đưa ra một vài gợi ý về cách tìm kiếm niềm đam mê cho các bạn.Như tôi đã nói, đam mê phải xuất phát từ một trong các sở trường của các bạn. Sở trường chính là những công việc ta làm tốt, làm giỏi. Vậy để xác định sở trường, đam mê, ta phải thực hành, ta phải làm thử. Không thể chỉ ngồi đấy mà nghĩ về quá khứ người này bảo ta có năng khiếu cái này, làm giỏi cái kia. Hãy thực tế chút đi. Bạn phải làm đủ nhiều để biết bạn làm giỏi hay không. Làm nhiều cũng là cách để chúng ta biết được mình có thích công việc đó hay không, có muốn công việc đó trở thành đam mê gắn liền với cuộc đời bạn hay không. Vậy rõ ràng để tìm được chính xác đam mê, ta phải bước ra ngoài, thử tất cả cách công việc bạn thấy mình có sở trường. Nếu bạn thích kinh doanh ư? Ra ngoài, và tập bán hàng đi. Bạn có thể làm nhân viên bán hàng của một công ty nào đó, hoặc tự mình tạo ra những dự án kinh doanh nho nhỏ.  Bạn hâm mộ Ironman, bạn muốn trở thành một chuyên gia về điện tử, hay công nghệ thông tin ư? Hãy mua những quyển sách dạy bạn làm việc đó, lên google và bắt đầu tìm tòi để làm ra những mạch điện tử, các phần mềm đi. Những mạch điện tử, phần mềm cơ bản không quá khó để thực hiện, và bạn có thể dễ dàng làm được theo những hướng dẫn có sắn trên mạng hoặc trong sách. Tôi tin rằng những kinh nghiệm, trải nghiệm thực tế khi bắt đầu công việc là cách tốt nhất để bồi đắp thêm cho bạn sự yêu thích, sự mong muốn, khát khao đạt được những thành tựu trong công việc đó.Tôi có rất nhiều người bạn đã tìm được niềm đam mê cho cuộc đời mình. Hầu hết họ đã thử qua nhiều công việc khác nhau. Họ không ngại thử, bởi họ hiểu rằng chỉ có va chạm với cuộc sống mới giúp họ tìm ra được điều mình mong muốn, tìm ra được hướng đi cho cuộc đời của mình. Nếu bạn nói với tôi cuộc sống quá ngắn ngủi để chúng ta đi thử làm rất nhiều các công việc khác nhau để tìm cho mình một niềm đam mê thực thụ? Nhiều bạn lại sợ những sóng gió, những bất ổn với cuộc đời của bạn khi bạn không đi theo những con đường mà gia đình, cha mẹ đã hướng sẵn cho bạn. Xin thưa không tìm được niềm đam mê đích thực trong cuộc đời mình mới là điều đáng sợ nhất. Nếu bạn đi theo những con đường đang có sẵn trước mặt, hay để cho dòng đời xô bạn vào một con đường nào đó rồi bạn lí luận rằng bạn sẽ cố gắng làm mọi việc một cách tốt nhất có thể để tạo ra một cuộc sống tốt, có thể đó sẽ không phải lựa chọn hay. Nếu bạn nghe cha mẹ, xã hội nói nghề này sẽ giúp bạn kiếm nhiều tiền, nghề kia giúp cuộc sống ổn định, bạn mong nó sẽ tốt cho mình, rất có thể một ngày nào đó, ngay trong trường đại học bạn nhận ra chẳng bao giờ bạn có cảm hứng với những môn học liên quan đến chuyên ngành đó, hoặc tệ hơn đến lúc đi làm, mỗi ngày đối với bạn sẽ tràn đầy những áp lực của công việc. Bạn sẽ phải cố làm mọi việc cho nhanh, cho kịp deadline, cho thời gian trôi đi để cuối tháng có tiền lương. Nếu bạn chấp nhận sống như vậy, bạn đã đánh mất đi sự lựa chọn lớn nhất của cuộc đời mình rồi: lựa chọn về những công việc bạn làm. Mỗi người chỉ sống một lần, và nếu bạn không theo đuổi đam mê, theo đuổi mục đích sống của riêng cá nhân bạn, làm sao bạn thấy được giá trị, ý nghĩa đích thực của cuộc sống, làm sao bạn ghi lại dấu ấn cá nhân của chính bạn trên những bước đường bạn đã đi qua?Ngay từ bây giờ, nếu bạn chưa tìm được đam mê, hãy:      Phân tích cho bản thân thấy rõ sự cần thiết của việc tìm kiếm niềm đam mê.        Kiên định tìm kiếm niềm đam mê trong những sở trường, những công việc mình yêu thích, gạt bỏ mọi ảnh hưởng từ bên ngoài như gia đình, xã hội. Bạn hãy nhớ chỉ bạn mới có quyền quyết định cuộc đời bạn sẽ trở nên như thế nào.        Bắt tay vào thực làm các công việc sở trường, công việc bạn yêu thích. Hãy nhớ chỉ có như vậy mới giúp bạn quyết định bạn có thực sự muốn kiên trì theo đuổi công việc đó hay không.  Và, khi chúng ta đã tìm được niềm đam mê của cuộc đời rồi, chúng ta cần tìm con đường để theo đuổi đam mê đó.Theo tôi có một số nguyên tắc cần thiết trong quá trình theo đuổi đam mê:+ Làm theo kế hoạch: Vì theo đuổi đam mê là mục tiêu, là lẽ sống của cả cuộc đời, ta cần nghiêm túc thực hiện nó theo một kế hoạch để đảm bảo tính bền vững. Hãy đặt ra kế hoạch 5 năm, 10 năm cho cá nhân bạn và chia nhỏ thành các kế hoạch theo từng năm, từng tháng, từng ngày. Kế hoạch sẽ tạo ra sự bền bỉ giúp ra theo đuổi mọi đam mê.+ Học hỏi kinh nghiệm từ những người đi trước: Bạn theo đuổi đam mê với máy tính vì hâm mộ Bill Gates? Hãy học hỏi những kinh nghiệm từ ông ấy, học cách ông ấy say mê với phát triển phần mềm, học cách ông ấy điều hành một công ty máy tính. Học kinh nghiệm từ những người đi trước sẽ giúp chúng ta tránh được những sai lầm không đáng có khi theo đuổi niềm đam mê. Đọc sách và xem các tài liệu trên mạng là cách rất tốt để học hỏi.Tôi mong bài viết này sẽ giúp ích cho các bạn phần nào trong việc lựa chọn và theo đuổi đam mê của cuộc đời mình. Hãy nhớ rằng tìm kiếm và theo đuổi đam mê không lúc nào là muộn. Chỉ khi tìm được đam mê, theo đuổi đam mê, mỗi ngày được làm những công việc mình thích chúng ta mới tìm thấy ý nghĩa thực sự của cuộc sống.  “Nếu bạn vẫn chưa tìm thấy niềm đam mê của mình, hãy tạo ra những điều mới, dẫn đầu các xu hướng mới, và hình thành thêm nhiều sự kết hợp mới. Và đừng bao giờ ngừng tìm kiếm. Hãy cứ khát khao, hãy cứ dại khờ”Steve Jobs.  “Chúng ta phải thực hiện niềm đam mê trước khi cảm nhận được nó”Jean-Paul Sartre  “Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết”Albert Einstein",
      "url": " https://vietanhdev.com/articles/song-voi-dam-me/",
      "categories": "article"
    }
    
  
}
